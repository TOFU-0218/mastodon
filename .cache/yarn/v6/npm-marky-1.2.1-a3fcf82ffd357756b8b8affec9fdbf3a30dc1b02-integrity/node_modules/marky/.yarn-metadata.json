{
  "manifest": {
    "name": "marky",
    "version": "1.2.1",
    "description": "Performance timer based on performance.mark() and measure()",
    "main": "lib/marky.cjs.js",
    "jsnext:main": "lib/marky.es.js",
    "module": "lib/marky.es.js",
    "scripts": {
      "clean": "rimraf lib dist && mkdirp lib dist",
      "rollup-cjs": "rollup -c config/rollup.config.cjs.js && rollup -c config/rollup.config.browser.cjs.js",
      "rollup-es": "rollup -c config/rollup.config.es.js && rollup -c config/rollup.config.browser.es.js",
      "rollup-iife": "rollup -c config/rollup.config.iife.js",
      "rollup": "npm-run-all --parallel rollup-cjs rollup-es rollup-iife",
      "minify": "uglifyjs -mc < dist/marky.js > dist/marky.min.js",
      "prepublish": "npm run build",
      "build": "npm-run-all clean rollup minify",
      "test": "npm run rollup-cjs && mocha test/test.js",
      "test-browser": "npm run rollup-cjs && zuul --no-coverage test/test.js",
      "dev": "npm run rollup-cjs && NODE_ENV=development zuul --no-coverage --local 9000 test/test.js",
      "lint": "standard"
    },
    "keywords": [
      "mark",
      "measure",
      "performance",
      "user timing",
      "timing",
      "polyfill",
      "stopwatch",
      "timer"
    ],
    "author": {
      "name": "Nolan Lawson",
      "email": "nolan@nolanlawson.com"
    },
    "license": "Apache-2.0",
    "devDependencies": {
      "assert": "^1.4.1",
      "babel-preset-es2015": "^6.18.0",
      "babelify": "^7.3.0",
      "envify": "^4.0.0",
      "mkdirp": "^0.5.1",
      "mocha": "^3.2.0",
      "native-or-lie": "^1.0.2",
      "npm-run-all": "^3.1.2",
      "rimraf": "^2.5.4",
      "rollup": "^0.36.3",
      "rollup-plugin-buble": "^0.14.0",
      "rollup-plugin-commonjs": "^6.0.1",
      "rollup-plugin-inject": "^2.0.0",
      "rollup-plugin-node-resolve": "^2.0.0",
      "rollup-plugin-replace": "^1.1.1",
      "standard": "^8.6.0",
      "uglify-js": "^2.7.4",
      "zuul": "^3.11.1",
      "zuul-ngrok": "github:nolanlawson/zuul-ngrok#patch-1"
    },
    "files": [
      "lib",
      "dist"
    ],
    "browser": {
      "./lib/marky.cjs.js": "./lib/marky.browser.cjs.js",
      "./lib/marky.es.js": "./lib/marky.browser.es.js"
    },
    "standard": {
      "ignore": [
        "lib",
        "dist"
      ]
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/nolanlawson/marky.git"
    },
    "bugs": {
      "url": "https://github.com/nolanlawson/marky/issues"
    },
    "homepage": "https://github.com/nolanlawson/marky#readme",
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-marky-1.2.1-a3fcf82ffd357756b8b8affec9fdbf3a30dc1b02-integrity/node_modules/marky/package.json",
    "readmeFilename": "README.md",
    "readme": "marky [![Build Status](https://travis-ci.org/nolanlawson/marky.svg?branch=master)](https://travis-ci.org/nolanlawson/marky)\n======\n\nJavaScript timer based on `performance.mark()` and `performance.measure()`, providing [high-resolution\ntimings](https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API) as well as nice Dev Tools visualizations.\n\nFor browsers that don't support `performance.mark()`, it falls back to \n`performance.now()` or `Date.now()`. In Node, it uses `process.hrtime()`.\n\nQuick start\n----\n\nInstall via npm:\n\n    npm install marky\n\nOr as a script tag:\n\n```html\n<script src=\"https://unpkg.com/marky/dist/marky.min.js\"></script>\n```\n\nThen take some measurements:\n\n```js\nvar marky = require('marky');\n\nmarky.mark('expensive operation');\ndoExpensiveOperation();\nmarky.stop('expensive operation');\n```\n\nWhy?\n---\n\nThe [User Timing API](https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API) is [more performant](https://gist.github.com/paulirish/2fad3834e2617fb199bc12e17058dde4)\nthan `console.time()` and `console.timeEnd()`,\nand [more accurate](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now) than `Date.now()`. Also, you get nice visualizations in Chrome Dev Tools:\n\n![Chrome Dev Tools screenshot](doc/chrome.png)\n\nAs well as Edge F12 Tools:\n\n![Edge F12 screenshot](doc/edge.png)\n\nThis is because `marky` adds standard\n[PerformanceEntries](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry) to the [Performance Timeline](https://developer.mozilla.org/en-US/docs/Web/API/Performance_Timeline). Tools like [WebPageTest](http://blog.patrickmeenan.com/2013/07/measuring-performance-of-user-experience.html) and [Windows Performance Analyzer](https://blogs.windows.com/msedgedev/2016/05/11/top-down-analysis-wpt/) also surface them, and you can even [send them to your analytics provider](https://codelabs.developers.google.com/codelabs/performance-analytics/index.html).\n\nAPI\n---\n\n`marky.mark()` begins recording, and `marky.stop()` finishes recording:\n\n```js\nmarky.mark('releaseTheHounds');\nreleaseTheHounds();\nmarky.stop('releaseTheHounds');\n```\n\nYou can also do more complex scenarios:\n\n```js\nfunction setSail() {\n  marky.mark('setSail');\n  marky.mark('raiseTheAnchor');\n  raiseTheAnchor();\n  marky.stop('raiseTheAnchor');\n  marky.mark('unfurlTheSails');\n  unfurlTheSails();\n  marky.stop('unfurlTheSails');\n  marky.stop('setSail');\n}\n```\n\n`marky.stop()` also returns a `PerformanceEntry`:\n\n```js\nmarky.mark('manTheTorpedos');\nmanTheTorpedos();\nvar entry = marky.stop('manTheTorpedos');\n```\n\nThe entry will look something like:\n\n```json\n{\n  \"entryType\": \"measure\",\n  \"startTime\": 1974112,\n  \"duration\": 350,\n  \"name\": \"manTheTorpedos\"\n}\n```\n\nYou can get all entries using:\n\n```js\nvar entries = marky.getEntries();\n```\n\nThis provides a list of all measures ordered by `startTime`, e.g.:\n\n```json\n[\n  {\n    \"entryType\": \"measure\",\n    \"startTime\": 1974112,\n    \"duration\": 350,\n    \"name\": \"numberOne\"\n  },\n  {\n    \"entryType\": \"measure\",\n    \"startTime\": 1975108,\n    \"duration\": 300,\n    \"name\": \"numberTwo\"\n  },\n  {\n    \"entryType\": \"measure\",\n    \"startTime\": 1976127,\n    \"duration\": 250,\n    \"name\": \"numberThree\"\n  }\n]\n```\n\nYou can also clear the entries using `marky.clear():`\n\n```js\nmarky.clear()\n```\n\nAfter this, `marky.getEntries()` will return an empty list. (If the User Timing API is supported, this will delete all the `mark` and `measure` entries from the timeline.)\n\nBrowser support\n----\n\n`marky` is tested in the following browsers/environments:\n\n* IE 9+\n* Safari 8+\n* iOS 8+\n* Android 4.4+\n* Chrome\n* Firefox\n* Edge\n* Node 4+\n\nPer [the spec](https://www.w3.org/TR/resource-timing-1/#extensions-performance-interface), browsers only need to hold a minimum\nof 150 entries in their Performance Timeline buffer. Notably Firefox throttles their buffer to 150, which for `marky`\nmeans you can get a maximum of 50 entries from `marky.getEntries()` (because `marky` creates two marks and a measure).\n\nIf you need to get more than 50 entries from `marky.getEntries()`, you can do:\n\n```js\nif (typeof performance !== 'undefined' && performance.setResourceTimingBufferSize) {\n  performance.setResourceTimingBufferSize(10000); // or however many you need\n}\n```\n\nIn Node and [browsers that don't support the User Timing API](http://caniuse.com/#feat=user-timing),\n`marky` follows the behavior of Edge and Chrome, and does not limit the number of entries. `marky.stop()` and \n`marky.getEntries()` will return pseudo-`PerformanceEntry` objects.\n\nSee also\n---\n\n- [appmetrics.js](https://github.com/ebidel/appmetrics.js) â€“ a library on top of `mark()`/`measure()` which reports to Google Analytics.\n\nCredits\n----\n\nThanks to [@toddreifsteck](https://github.com/toddreifsteck) for feedback on this project and clarifications on the User Timing API.\n",
    "licenseText": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n    \"License\" shall mean the terms and conditions for use, reproduction, and\n    distribution as defined by Sections 1 through 9 of this document.\n\n    \"Licensor\" shall mean the copyright owner or entity authorized by the\n    copyright owner that is granting the License.\n\n    \"Legal Entity\" shall mean the union of the acting entity and all other\n    entities that control, are controlled by, or are under common control with\n    that entity. For the purposes of this definition, \"control\" means (i) the\n    power, direct or indirect, to cause the direction or management of such\n    entity, whether by contract or otherwise, or (ii) ownership of\n    fifty percent (50%) or more of the outstanding shares, or (iii) beneficial\n    ownership of such entity.\n\n    \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising\n    permissions granted by this License.\n\n    \"Source\" form shall mean the preferred form for making modifications,\n    including but not limited to software source code, documentation source,\n    and configuration files.\n\n    \"Object\" form shall mean any form resulting from mechanical transformation\n    or translation of a Source form, including but not limited to compiled\n    object code, generated documentation, and conversions to\n    other media types.\n\n    \"Work\" shall mean the work of authorship, whether in Source or Object\n    form, made available under the License, as indicated by a copyright notice\n    that is included in or attached to the work (an example is provided in the\n    Appendix below).\n\n    \"Derivative Works\" shall mean any work, whether in Source or Object form,\n    that is based on (or derived from) the Work and for which the editorial\n    revisions, annotations, elaborations, or other modifications represent,\n    as a whole, an original work of authorship. For the purposes of this\n    License, Derivative Works shall not include works that remain separable\n    from, or merely link (or bind by name) to the interfaces of, the Work and\n    Derivative Works thereof.\n\n    \"Contribution\" shall mean any work of authorship, including the original\n    version of the Work and any modifications or additions to that Work or\n    Derivative Works thereof, that is intentionally submitted to Licensor for\n    inclusion in the Work by the copyright owner or by an individual or\n    Legal Entity authorized to submit on behalf of the copyright owner.\n    For the purposes of this definition, \"submitted\" means any form of\n    electronic, verbal, or written communication sent to the Licensor or its\n    representatives, including but not limited to communication on electronic\n    mailing lists, source code control systems, and issue tracking systems\n    that are managed by, or on behalf of, the Licensor for the purpose of\n    discussing and improving the Work, but excluding communication that is\n    conspicuously marked or otherwise designated in writing by the copyright\n    owner as \"Not a Contribution.\"\n\n    \"Contributor\" shall mean Licensor and any individual or Legal Entity on\n    behalf of whom a Contribution has been received by Licensor and\n    subsequently incorporated within the Work.\n\n2. Grant of Copyright License.\n\n    Subject to the terms and conditions of this License, each Contributor\n    hereby grants to You a perpetual, worldwide, non-exclusive, no-charge,\n    royalty-free, irrevocable copyright license to reproduce, prepare\n    Derivative Works of, publicly display, publicly perform, sublicense,\n    and distribute the Work and such Derivative Works in\n    Source or Object form.\n\n3. Grant of Patent License.\n\n    Subject to the terms and conditions of this License, each Contributor\n    hereby grants to You a perpetual, worldwide, non-exclusive, no-charge,\n    royalty-free, irrevocable (except as stated in this section) patent\n    license to make, have made, use, offer to sell, sell, import, and\n    otherwise transfer the Work, where such license applies only to those\n    patent claims licensable by such Contributor that are necessarily\n    infringed by their Contribution(s) alone or by combination of their\n    Contribution(s) with the Work to which such Contribution(s) was submitted.\n    If You institute patent litigation against any entity (including a\n    cross-claim or counterclaim in a lawsuit) alleging that the Work or a\n    Contribution incorporated within the Work constitutes direct or\n    contributory patent infringement, then any patent licenses granted to\n    You under this License for that Work shall terminate as of the date such\n    litigation is filed.\n\n4. Redistribution.\n\n    You may reproduce and distribute copies of the Work or Derivative Works\n    thereof in any medium, with or without modifications, and in Source or\n    Object form, provided that You meet the following conditions:\n\n    1. You must give any other recipients of the Work or Derivative Works a\n    copy of this License; and\n\n    2. You must cause any modified files to carry prominent notices stating\n    that You changed the files; and\n\n    3. You must retain, in the Source form of any Derivative Works that You\n    distribute, all copyright, patent, trademark, and attribution notices from\n    the Source form of the Work, excluding those notices that do not pertain\n    to any part of the Derivative Works; and\n\n    4. If the Work includes a \"NOTICE\" text file as part of its distribution,\n    then any Derivative Works that You distribute must include a readable copy\n    of the attribution notices contained within such NOTICE file, excluding\n    those notices that do not pertain to any part of the Derivative Works,\n    in at least one of the following places: within a NOTICE text file\n    distributed as part of the Derivative Works; within the Source form or\n    documentation, if provided along with the Derivative Works; or, within a\n    display generated by the Derivative Works, if and wherever such\n    third-party notices normally appear. The contents of the NOTICE file are\n    for informational purposes only and do not modify the License.\n    You may add Your own attribution notices within Derivative Works that You\n    distribute, alongside or as an addendum to the NOTICE text from the Work,\n    provided that such additional attribution notices cannot be construed\n    as modifying the License.\n\n    You may add Your own copyright statement to Your modifications and may\n    provide additional or different license terms and conditions for use,\n    reproduction, or distribution of Your modifications, or for any such\n    Derivative Works as a whole, provided Your use, reproduction, and\n    distribution of the Work otherwise complies with the conditions\n    stated in this License.\n\n5. Submission of Contributions.\n\n    Unless You explicitly state otherwise, any Contribution intentionally\n    submitted for inclusion in the Work by You to the Licensor shall be under\n    the terms and conditions of this License, without any additional\n    terms or conditions. Notwithstanding the above, nothing herein shall\n    supersede or modify the terms of any separate license agreement you may\n    have executed with Licensor regarding such Contributions.\n\n6. Trademarks.\n\n    This License does not grant permission to use the trade names, trademarks,\n    service marks, or product names of the Licensor, except as required for\n    reasonable and customary use in describing the origin of the Work and\n    reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty.\n\n    Unless required by applicable law or agreed to in writing, Licensor\n    provides the Work (and each Contributor provides its Contributions)\n    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n    either express or implied, including, without limitation, any warranties\n    or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS\n    FOR A PARTICULAR PURPOSE. You are solely responsible for determining the\n    appropriateness of using or redistributing the Work and assume any risks\n    associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability.\n\n    In no event and under no legal theory, whether in tort\n    (including negligence), contract, or otherwise, unless required by\n    applicable law (such as deliberate and grossly negligent acts) or agreed\n    to in writing, shall any Contributor be liable to You for damages,\n    including any direct, indirect, special, incidental, or consequential\n    damages of any character arising as a result of this License or out of\n    the use or inability to use the Work (including but not limited to damages\n    for loss of goodwill, work stoppage, computer failure or malfunction,\n    or any and all other commercial damages or losses), even if such\n    Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability.\n\n    While redistributing the Work or Derivative Works thereof, You may choose\n    to offer, and charge a fee for, acceptance of support, warranty,\n    indemnity, or other liability obligations and/or rights consistent with\n    this License. However, in accepting such obligations, You may act only\n    on Your own behalf and on Your sole responsibility, not on behalf of any\n    other Contributor, and only if You agree to indemnify, defend, and hold\n    each Contributor harmless for any liability incurred by, or claims\n    asserted against, such Contributor by reason of your accepting any such\n    warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work\n\n    To apply the Apache License to your work, attach the following boilerplate\n    notice, with the fields enclosed by brackets \"[]\" replaced with your own\n    identifying information. (Don't include the brackets!) The text should be\n    enclosed in the appropriate comment syntax for the file format. We also\n    recommend that a file or class name and description of purpose be included\n    on the same \"printed page\" as the copyright notice for easier\n    identification within third-party archives.\n\n        Copyright 2016 Nolan Lawson\n\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software\n        distributed under the License is distributed on an \"AS IS\" BASIS,\n        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n        or implied. See the License for the specific language governing\n        permissions and limitations under the License.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/marky/-/marky-1.2.1.tgz#a3fcf82ffd357756b8b8affec9fdbf3a30dc1b02",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/marky/-/marky-1.2.1.tgz",
    "hash": "a3fcf82ffd357756b8b8affec9fdbf3a30dc1b02",
    "integrity": "sha512-md9k+Gxa3qLH6sUKpeC2CNkJK/Ld+bEz5X96nYwloqphQE0CKCVEKco/6jxEZixinqNdz5RFi/KaCyfbMDMAXQ==",
    "registry": "npm",
    "packageName": "marky",
    "cacheIntegrity": "sha512-md9k+Gxa3qLH6sUKpeC2CNkJK/Ld+bEz5X96nYwloqphQE0CKCVEKco/6jxEZixinqNdz5RFi/KaCyfbMDMAXQ== sha1-o/z4L/01d1a4uK/+yf2/OjDcGwI="
  },
  "registry": "npm",
  "hash": "a3fcf82ffd357756b8b8affec9fdbf3a30dc1b02"
}