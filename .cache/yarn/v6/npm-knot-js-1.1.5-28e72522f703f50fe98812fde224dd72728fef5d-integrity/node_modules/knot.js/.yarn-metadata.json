{
  "manifest": {
    "name": "knot.js",
    "description": "A browser-based event emitter, for tying things together.",
    "main": "dist/knot.js",
    "module": "dist/knot.module.js",
    "jsnext:main": "dist/knot.module.js",
    "version": "1.1.5",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/callmecavs/knot.js.git"
    },
    "author": {
      "name": "Michael Cavalea",
      "email": "callmecavs@gmail.com",
      "url": "http://callmecavs.com/"
    },
    "scripts": {
      "prebuild": "eslint src",
      "build": "rollup -c",
      "dev": "rollup -c -w -m inline",
      "prepublish": "npm run build",
      "server": "python -m SimpleHTTPServer 3000"
    },
    "keywords": [
      "browser",
      "event",
      "emitter"
    ],
    "devDependencies": {
      "babel-eslint": "^7.1.1",
      "babel-plugin-external-helpers": "^6.18.0",
      "babel-preset-es2015-rollup": "^3.0.0",
      "babel-preset-stage-0": "^6.16.0",
      "eslint": "^3.13.0",
      "eslint-config-standard": "^6.2.1",
      "eslint-plugin-promise": "^3.4.0",
      "eslint-plugin-standard": "^2.0.1",
      "rollup": "^0.41.1",
      "rollup-plugin-babel": "^2.7.1",
      "rollup-plugin-node-resolve": "^2.0.0",
      "rollup-watch": "^3.2.2"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-knot-js-1.1.5-28e72522f703f50fe98812fde224dd72728fef5d-integrity/node_modules/knot.js/package.json",
    "readmeFilename": "README.md",
    "readme": "# Knot.js\n\n[![Knot.js on NPM](https://img.shields.io/npm/v/knot.js.svg)](https://www.npmjs.com/package/knot.js)\n\nA browser-based event emitter, for tying things together.\n\n## Usage\n\nKnot was developed with a modern JavaScript workflow in mind. To use it, it's recommended you have a build system in place that can transpile ES6, and bundle modules. For a minimal boilerplate that does so, check out [outset](https://github.com/callmecavs/outset).\n\nFollow these steps to get started:\n\n* [Install](#install)\n* [Call](#call)\n\nThen dig into the [API](#api).\n\n### Install\n\nUsing NPM, install Knot.js, and add it to your package.json dependencies.\n\n```\n$ npm install knot.js --save\n```\n\n### Call\n\nSimply import Knot, then call it.\n\n* Passed _no parameters_, Knot will return a new emitter\n* Passed _an object_, Knot will extend it to include the emitter methods\n\nNote that the `this` context in the event handlers:\n\n* Is the object passed in, if one was provided\n* Otherwise, it is the emitter itself\n\n```es6\n// import Knot\n\nimport knot from 'knot.js'\n\n// create a new emitter\n// in the handlers, 'this' refers to the emitter\n\nconst emitter = knot()\n\n// extend an existing object, transforming it into an emitter\n// in the handlers, 'this' refers to the Class\n\nconst object = new Class()\nconst extended = knot(object)\n```\n\n## API\n\nAll methods are chainable.\n\nKnot exposes the following API:\n\n* [`on`](#onname-handler)\n* [`once`](#oncename-handler)\n* [`off`](#offname-handler)\n* [`emit`](#emitname-arguments)\n\n### .on(name, handler)\n\nAdd a handler to a new or existing event.\n\n```es6\n// add an anonymous function as a handler\n\nemitter.on('name', () => {\n  // ...\n})\n\n// add a named function as a handler\n\nconst handler = () => {\n  // ...\n}\n\nemitter.on('name', handler)\n```\n\n### .once(name, handler)\n\nAdd a handler, that fires _only once_, to a new or existing event.\n\n```es6\n// add an anonymous function as a handler\n\nemitter.once('name', () => {\n  // ...\n})\n\n// add a named function as a handler\n\nconst handler = () => {\n  // ...\n}\n\nemitter.once('name', handler)\n```\n\n### .off(name[, handler])\n\nRemove a specific handler from an event.\n\n```es6\n// handler must be a named function\n\nconst handler = () => {\n  // ...\n}\n\nemitter.off('name', handler)\n```\n\nRemove all of an event's handlers.\n\n```es6\nemitter.off('name')\n```\n\n### .emit(name[, arguments])\n\nEmit an event, firing all of its handlers.\n\n```es6\nemitter.emit('name')\n```\n\nOptionally, include arguments that will be passed to each handler.\n\n```es6\n// accept arguments in handler\n\nemitter.on('name', (a, b, c, d) => console.log(a, b, c, d))\n\n// include arguments in call to emit\n\nemitter.emit('name', 1, '2', [3], {})\n\n// LOG: 1 '2' [3] {}\n```\n\n## Browser Support\n\nTested in all modern browsers and **IE10+**.\n\n## License\n\nMIT. Â© 2016 Michael Cavalea\n\n[![Built With Love](http://forthebadge.com/images/badges/built-with-love.svg)](http://forthebadge.com)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/knot.js/-/knot.js-1.1.5.tgz#28e72522f703f50fe98812fde224dd72728fef5d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/knot.js/-/knot.js-1.1.5.tgz",
    "hash": "28e72522f703f50fe98812fde224dd72728fef5d",
    "integrity": "sha1-KOclIvcD9Q/piBL94iTdcnKP710=",
    "registry": "npm",
    "packageName": "knot.js",
    "cacheIntegrity": "sha512-ptGtvTrgLNtQj9ilUR+tSyHWTCPp2xu/EHkeo3OvpczzNqBSwjQKz8G7vUhzlRbasXVULBWSejsj6QRQb1pakw== sha1-KOclIvcD9Q/piBL94iTdcnKP710="
  },
  "registry": "npm",
  "hash": "28e72522f703f50fe98812fde224dd72728fef5d"
}