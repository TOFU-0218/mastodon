{
  "manifest": {
    "name": "react-select",
    "version": "2.4.4",
    "description": "A Select control built with and for ReactJS",
    "main": "lib/index.js",
    "module": "dist/react-select.esm.js",
    "sideEffects": false,
    "author": {
      "name": "Jed Watson"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/JedWatson/react-select.git"
    },
    "dependencies": {
      "classnames": "^2.2.5",
      "emotion": "^9.1.2",
      "memoize-one": "^5.0.0",
      "prop-types": "^15.6.0",
      "raf": "^3.4.0",
      "react-input-autosize": "^2.2.1",
      "react-transition-group": "^2.2.1"
    },
    "devDependencies": {
      "@atlaskit/button": "^7.0.2",
      "@atlaskit/icon": "^11.0.1",
      "@atlaskit/modal-dialog": "^4.0.3",
      "@atlaskit/spinner": "^5.0.0",
      "@atlaskit/tooltip": "^9.1.4",
      "@babel/cli": "^7.0.0",
      "@babel/core": "^7.2.2",
      "@babel/plugin-proposal-class-properties": "^7.2.3",
      "@babel/polyfill": "^7.0.0",
      "@babel/preset-env": "^7.0.0",
      "@babel/preset-flow": "^7.0.0",
      "@babel/preset-react": "^7.0.0",
      "babel-core": "^7.0.0-bridge.0",
      "babel-eslint": "^9.0.0",
      "babel-jest": "^23.6.0",
      "babel-loader": "^8.0.0",
      "babel-plugin-emotion": "9.2.10",
      "bundlesize": "^0.17.0",
      "chroma-js": "^1.3.6",
      "chrono-node": "^1.3.5",
      "codesandboxer": "^0.1.1",
      "concurrently": "^3.5.1",
      "copy-webpack-plugin": "^4.3.1",
      "coveralls": "^2.11.12",
      "cross-env": "^5.1.3",
      "css-loader": "^0.28.7",
      "cypress": "^1.4.1",
      "dotenv": "^5.0.1",
      "enzyme": "^3.3.0",
      "enzyme-adapter-react-16": "^1.1.1",
      "enzyme-to-json": "^3.3.0",
      "eslint": "^4.6.1",
      "eslint-plugin-react": "^7.3.0",
      "extract-react-types-loader": "^0.3.0",
      "flow-bin": "^0.91.0",
      "gh-pages": "^1.1.0",
      "html-webpack-plugin": "^2.30.1",
      "husky": "^0.14.3",
      "jest": "^23.6.0",
      "jest-in-case": "^1.0.2",
      "lint-staged": "^7.0.5",
      "moment": "^2.20.1",
      "nps": "^5.7.1",
      "nps-utils": "^1.3.0",
      "pretty-proptypes": "^0.5.0",
      "raf-schd": "^2.1.0",
      "raw-loader": "^0.5.1",
      "react": "^16.2.0",
      "react-codesandboxer": "^2.0.1",
      "react-dom": "^16.2.0",
      "react-helmet": "^5.2.0",
      "react-markings": "^1.3.0",
      "react-router-dom": "^4.2.2",
      "react-syntax-highlighter": "^7.0.1",
      "rollup": "1.1.2",
      "rollup-plugin-babel": "^4.3.2",
      "rollup-plugin-commonjs": "^9.2.0",
      "rollup-plugin-node-resolve": "^4.0.0",
      "rollup-plugin-terser": "^4.0.2",
      "style-loader": "^0.19.1",
      "unfetch": "^3.0.0",
      "webpack": "^3.10.0",
      "webpack-dev-server": "^2.9.7"
    },
    "peerDependencies": {
      "react": "^15.3.0 || ^16.0.0",
      "react-dom": "^15.3.0 || ^16.0.0"
    },
    "scripts": {
      "build": "nps build && bundlesize",
      "watch": "nps build.watch",
      "coveralls": "cat coverage/lcov.info | coveralls",
      "lint": "eslint .",
      "deploy": "cross-env NODE_ENV=production nps publish",
      "start": "cross-env FORCE_EXTRACT_REACT_TYPES=true webpack-dev-server --progress",
      "fresh": "rm -rf node_modules && yarn install",
      "test": "npm run test:jest && npm run test:cypress",
      "test:jest": "jest --coverage",
      "e2e": "concurrently --kill-others --success=first --names 'SERVER,E2E' 'yarn start --progress=false --no-info' 'yarn test:cypress'",
      "test:cypress": "cypress run --spec ./cypress/integration/select_spec.js",
      "test:cypress-watch": "node ./node_modules/.bin/cypress open",
      "precommit": "flow check && lint-staged"
    },
    "files": [
      "dist",
      "lib",
      "src"
    ],
    "keywords": [
      "combobox",
      "form",
      "input",
      "multiselect",
      "react",
      "react-component",
      "select",
      "ui"
    ],
    "bundlesize": [
      {
        "path": "./dist/react-select.js"
      }
    ],
    "jest": {
      "modulePathIgnorePatterns": [
        "./node_modules"
      ],
      "testRegex": "src/*(/(__tests?__/)([^_].*/)*?[^_][^/]*?\\.(test|spec)?\\.(js?))$",
      "setupFiles": [
        "./enzymeAdapter.setup.js"
      ]
    },
    "lint-staged": {
      "*.js": "eslint"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-react-select-2.4.4-ba72468ef1060c7d46fbb862b0748f96491f1f73-integrity/node_modules/react-select/package.json",
    "readmeFilename": "README.md",
    "readme": "[![NPM](https://img.shields.io/npm/v/react-select.svg)](https://www.npmjs.com/package/react-select)\n[![CircleCI](https://circleci.com/gh/JedWatson/react-select/tree/master.svg?style=shield)](https://circleci.com/gh/JedWatson/react-select/tree/master)\n[![Coverage Status](https://coveralls.io/repos/JedWatson/react-select/badge.svg?branch=master&service=github)](https://coveralls.io/github/JedWatson/react-select?branch=master)\n[![Supported by Thinkmill](https://thinkmill.github.io/badge/heart.svg)](http://thinkmill.com.au/?utm_source=github&utm_medium=badge&utm_campaign=react-select)\n\n# React-Select\n\nThe Select control for [React](https://reactjs.com). Initially built for use in [KeystoneJS](http://www.keystonejs.com).\n\nSee [react-select.com](https://www.react-select.com) for live demos and comprehensive docs.\n\n## Version 2 üéâ\n\nReact Select v2.0.0 is a complete rewrite, funded by [Thinkmill](https://www.thinkmill.com.au) and [Atlassian](https://atlaskit.atlassian.com). It represents a whole new approach to developing powerful React.js components that _just work_ out of the box, while being extremely customisable.\n\nImprovements include:\n\n* Flexible approach to data, with customisable functions\n* Extensible styling API with [emotion](https://emotion.sh)\n* Component Injection API for complete control over the UI behaviour\n* Controllable state props and modular architecture\n* Long-requested features like option groups, portal support, animation, and more\n\nIf you're interested in the background, watch Jed's [talk on React Select](https://youtu.be/Eb2wy-HNGMo) at ReactNYC in March 2018.\n\nSee our [upgrade guide](https://react-select.com/upgrade-guide) for a breakdown on how to upgrade from v1 to v2.\n\nThe old docs and examples will continue to be available at [v1.react-select.com](https://v1.react-select.com).\n\n# Installation and usage\n\nThe easiest way to use react-select is to install it from npm and build it into your app with Webpack.\n\n```\nyarn add react-select\n```\n\nThen use it in your app:\n\n```js\nimport React from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass App extends React.Component {\n  state = {\n    selectedOption: null,\n  }\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    );\n  }\n}\n```\n\n## Props\n\nCommon props you may want to specify include:\n\n* `autoFocus` - focus the control when it mounts\n* `className` - apply a className to the control\n* `classNamePrefix` - apply classNames to inner elements with the given prefix\n* `isDisabled` - disable the control\n* `isMulti` - allow the user to select multiple values\n* `isSearchable` - allow the user to search for matching options\n* `name` - generate an HTML input with this name, containing the current value\n* `onChange` - subscribe to change events\n* `options` - specify the options the user can select from\n* `placeholder` - change the text displayed when no option is selected\n* `value` - control the current value\n\nSee the [props documentation](https://www.react-select.com/props) for complete documentation on the props react-select supports.\n\n## Controllable Props\n\nYou can control the following props by providing values for them. If you don't, react-select will manage them for you.\n\n* `value` / `onChange` - specify the current value of the control\n* `menuIsOpen` / `onMenuOpen` / `onMenuClose` - control whether the menu is open\n* `inputValue` / `onInputChange` - control the value of the search input (changing this will update the available options)\n\nIf you don't provide these props, you can set the initial value of the state they control:\n\n* `defaultValue` - set the initial value of the control\n* `defaultMenuIsOpen` - set the initial open value of the menu\n* `defaultInputValue` - set the initial value of the search input\n\n## Methods\n\nReact-select exposes two public methods:\n\n* `focus()` - focus the control programatically\n* `blur()` - blur the control programatically\n\n## Customisation\n\nCheck the docs for more information on:\n\n* [Customising the styles](https://www.react-select.com/styles)\n* [Using custom components](https://www.react-select.com/components)\n* [Using the built-in animated components](https://www.react-select.com/home#animated-components)\n* [Creating an async select](https://www.react-select.com/async)\n* [Allowing users to create new options](https://www.react-select.com/creatable)\n* [Advanced use-cases](https://www.react-select.com/advanced)\n\n# Thanks\n\nThank you to everyone who has contributed to this project. It's been a wild ride.\n\nIf you like React Select, you should [follow me on twitter](https://twitter.com/jedwatson)\n\nShout out to [Joss Mackison](https://github.com/jossmac), [Charles Lee](https://github.com/gwyneplaine), [Ben Conolly](https://github.com/Noviny), [Dave Brotherstone](https://github.com/bruderstein), [Brian Vaughn](https://github.com/bvaughn), and the Atlassian Design System team ‚ù§Ô∏è\n\n## License\n\nMIT Licensed. Copyright (c) Jed Watson 2018.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Jed Watson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-select/-/react-select-2.4.4.tgz#ba72468ef1060c7d46fbb862b0748f96491f1f73",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-select/-/react-select-2.4.4.tgz",
    "hash": "ba72468ef1060c7d46fbb862b0748f96491f1f73",
    "integrity": "sha512-C4QPLgy9h42J/KkdrpVxNmkY6p4lb49fsrbDk/hRcZpX7JvZPNb6mGj+c5SzyEtBv1DmQ9oPH4NmhAFvCrg8Jw==",
    "registry": "npm",
    "packageName": "react-select",
    "cacheIntegrity": "sha512-C4QPLgy9h42J/KkdrpVxNmkY6p4lb49fsrbDk/hRcZpX7JvZPNb6mGj+c5SzyEtBv1DmQ9oPH4NmhAFvCrg8Jw== sha1-unJGjvEGDH1G+7hisHSPlkkfH3M="
  },
  "registry": "npm",
  "hash": "ba72468ef1060c7d46fbb862b0748f96491f1f73"
}