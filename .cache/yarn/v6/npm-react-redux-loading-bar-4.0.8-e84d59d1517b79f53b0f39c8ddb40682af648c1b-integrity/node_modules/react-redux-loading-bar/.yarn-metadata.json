{
  "manifest": {
    "name": "react-redux-loading-bar",
    "version": "4.0.8",
    "description": "Simple Loading Bar for Redux and React",
    "main": "build/index.js",
    "typings": "index.d.ts",
    "scripts": {
      "build": "`npm bin`/babel src -d build",
      "build:watch": "npm run build -- --watch",
      "lint": "`npm bin`/eslint src/ spec/",
      "test": "`npm bin`/mocha --require babel-core/register --exit spec/",
      "test:watch": "npm run test -- --watch",
      "test:coverage": "`npm bin`/istanbul cover -x 'spec/**' `npm bin`/_mocha -- -u exports --require babel-core/register --exit spec/",
      "test:coveralls": "npm run test:coverage && node ./node_modules/coveralls/bin/coveralls.js < coverage/lcov.info",
      "pkgfiles": "pkgfiles"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mironov/react-redux-loading-bar.git"
    },
    "keywords": [
      "react",
      "redux",
      "loading",
      "loading-bar",
      "progress",
      "progress-bar",
      "react-component"
    ],
    "author": {
      "name": "Anton Mironov",
      "url": "ant.mironov@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mironov/react-redux-loading-bar/issues"
    },
    "homepage": "https://github.com/mironov/react-redux-loading-bar",
    "peerDependencies": {
      "react": "^0.14.0 || ^15.0.0 || ^16.0.0",
      "react-dom": "^0.14.0 || ^15.0.0 || ^16.0.0",
      "react-redux": "^3.0.0 || ^4.0.0 || ^5.0.0",
      "redux": "^3.0.0 || ^4.0.0"
    },
    "devDependencies": {
      "@types/react": "^15.6.19",
      "babel-cli": "^6.7.7",
      "babel-core": "^6.7.7",
      "babel-eslint": "^7.1.1",
      "babel-preset-es2015": "^6.6.0",
      "babel-preset-react": "^6.5.0",
      "babel-preset-stage-2": "^6.24.1",
      "coveralls": "^3.0.2",
      "enzyme": "^3.6.0",
      "enzyme-adapter-react-15": "^1.1.0",
      "enzyme-adapter-react-16": "^1.5.0",
      "eslint": "^3.19.0",
      "eslint-config-airbnb": "^14.1.0",
      "eslint-plugin-import": "^2.14.0",
      "eslint-plugin-jsx-a11y": "^4.0.0",
      "eslint-plugin-react": "^6.10.3",
      "expect": "^1.18.0",
      "expect-jsx": "^5.0.0",
      "immutable": "^3.8.2",
      "istanbul": "^1.0.0-alpha.2",
      "jsdom": "^11.12.0",
      "lolex": "^1.4.0",
      "mocha": "^5.2.0",
      "pkgfiles": "^2.3.0",
      "react": "^16.5.0",
      "react-dom": "^16.5.0",
      "react-redux": "^5.0.4",
      "react-test-renderer": "^16.5.0",
      "redux": "^3.5.2"
    },
    "dependencies": {
      "prop-types": "^15.6.2",
      "react-lifecycles-compat": "^3.0.2"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-react-redux-loading-bar-4.0.8-e84d59d1517b79f53b0f39c8ddb40682af648c1b-integrity/node_modules/react-redux-loading-bar/package.json",
    "readmeFilename": "README.md",
    "readme": "# React Redux Loading Bar\n\n[![npm version](https://img.shields.io/npm/v/react-redux-loading-bar.svg?style=flat-square)](https://www.npmjs.com/package/react-redux-loading-bar)\n[![build status](https://img.shields.io/travis/mironov/react-redux-loading-bar/master.svg?style=flat-square)](https://travis-ci.org/mironov/react-redux-loading-bar)\n[![coverage status](https://coveralls.io/repos/github/mironov/react-redux-loading-bar/badge.svg?branch=master)](https://coveralls.io/github/mironov/react-redux-loading-bar?branch=master)\n[![npm downloads](https://img.shields.io/npm/dm/react-redux-loading-bar.svg?style=flat)](https://www.npmjs.com/package/react-redux-loading-bar)\n[![dependency status](https://david-dm.org/mironov/react-redux-loading-bar.svg)](https://david-dm.org/mironov/react-redux-loading-bar)\n\nA React component that provides Loading Bar (aka Progress Bar) for long running tasks.\n\n![Demo GIF](http://d.pr/i/JbwN+)\n\nConsists of:\n\n* React component — displays loading bar and simulates progress\n* Redux reducer — manages loading bar's part of the store\n* (optional) Redux middleware — automatically shows and hides Loading Bar for actions with promises\n\n## Examples\n\nSee [Demo](http://mironov.github.io/react-redux-loading-bar/) or its [source code](https://github.com/mironov/react-redux-loading-bar/tree/gh-pages/src).\n\n## Installation\n\n```bash\nnpm install --save react-redux-loading-bar\n```\n\n## Usage\n\nMount the `LoadingBar` component anywhere in your application:\n\n```jsx\nimport LoadingBar from 'react-redux-loading-bar'\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <LoadingBar />\n      </header>\n    )\n  }\n}\n```\n\nGood news is that it doesn't include any positioning. You can attach it to the top of any block or the whole page.\n\nYou can even include multiple loading bars on the same page, that will render independently. They need to be provided with\na scope so that you can adjust them independently.\n\n```jsx\nimport LoadingBar from 'react-redux-loading-bar'\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <LoadingBar />\n      </header>\n      <section>\n        <LoadingBar scope=\"sectionBar\" />\n      </section>\n    )\n  }\n}\n```\n\nInstall the reducer to the store:\n\n```jsx\nimport { combineReducers } from 'redux'\nimport { loadingBarReducer } from 'react-redux-loading-bar'\n\nconst reducer = combineReducers({\n  // app reducers\n  loadingBar: loadingBarReducer,\n})\n```\n\n## Usage with [`redux-promise-middleware`](https://github.com/pburtchaell/redux-promise-middleware)\n\nApply middleware to automatically show and hide loading bar on actions with promises:\n\n```jsx\nimport { createStore, applyMiddleware } from 'redux'\nimport { loadingBarMiddleware } from 'react-redux-loading-bar'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  // promise middleware\n  applyMiddleware(loadingBarMiddleware())\n)\n```\n\n## Usage with custom suffixes or alternative promise middleware\n\nYou can configure promise type suffixes that are used in your project:\n\n```jsx\nimport { createStore, applyMiddleware } from 'redux'\nimport { loadingBarMiddleware } from 'react-redux-loading-bar'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    loadingBarMiddleware({\n      promiseTypeSuffixes: ['REQUEST', 'SUCCESS', 'FAILURE'],\n    })\n  )\n)\n```\n\n## Usage with custom scope (for multiple loading bars)\n\n```jsx\nimport { createStore, applyMiddleware } from 'redux'\nimport { loadingBarMiddleware } from 'react-redux-loading-bar'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    loadingBarMiddleware({\n      scope: 'sectionBar',\n    })\n  )\n)\n```\n\nIf you're not using `redux-promise-middleware` or any other promise middleware, you can skip installing the `loadingBarMiddleware()` and dispatch `SHOW`/`HIDE` actions manually. The other option is to write your own middleware that will be similar to the [bundled one](https://github.com/mironov/react-redux-loading-bar/blob/master/src/loading_bar_middleware.js).\n\n## Usage without middleware\n\nYou can dispatch `SHOW`/`HIDE` actions wherever you want by importing the corresponding action creators:\n\n```jsx\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\ndispatch(showLoading())\n// do long running stuff\ndispatch(hideLoading())\n```\n\nYou need to dispatch `HIDE` as many times as `SHOW` was dispatched to make the bar disappear. In other words, the loading bar is shown until all long running tasks complete.\n\n## Usage without middleware but with scope\n\nYou need to provide the scope to the actions:\n\n```jsx\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\ndispatch(showLoading('sectionBar'))\n// do long running stuff\ndispatch(hideLoading('sectionBar'))\n```\n\n## Usage with [`redux-saga`](https://github.com/redux-saga/redux-saga)\n\nInstall the `loadingBarReducer()` and mount Loading Bar in your application.\nYou can import and dispatch `showLoading` and `hideLoading` from your sagas.\n\n```jsx\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\nexport function* fetchData() {\n  try {\n    yield put(showLoading())\n    const payload = yield call(API, params)\n    // payload processing\n  } finally {\n    yield put(hideLoading())\n  }\n}\n```\n\n## Usage with [`immutable-js`](https://github.com/facebook/immutable-js)\n\nYou can change component import line if your top level redux store object is `immutable`.\n\n```jsx\nimport { ImmutableLoadingBar as LoadingBar } from 'react-redux-loading-bar'\n\n// Mount LoadingBar component as usual\n```\n\n## Usage with jQuery Ajax Requests\n\nIf you happen to use jQuery for Ajax requests, you can dispatch `SHOW`/`HIDE` actions on `ajaxStart`/`ajaxStop` global events:\n\n```jsx\n$(document).on('ajaxStart', this.props.actions.showLoading)\n$(document).on('ajaxStop', this.props.actions.hideLoading)\n```\n\nSee [a demo](http://mironov.github.io/react-redux-loading-bar/?ajax) or checkout [the code](https://github.com/mironov/react-redux-loading-bar/blob/gh-pages/src/demo_ajax.js).\n\n## Styling\n\nYou can apply custom styling right on the `LoadingBar` component. For example you can change the color and height of the loading bar:\n\n```jsx\n<LoadingBar style={{ backgroundColor: 'blue', height: '5px' }} />\n```\n\nAlternatively, you can specify your own CSS class.\n\n**Please note that will disable default styling (which is `background-color: red; height: 3px; position: absolute;`).**\n\n```jsx\n<LoadingBar className=\"loading\" />\n```\n\nDon't forget to set `height`, `background-color` and `position` for the `loading` class in your CSS files.\n\n## Configure Progress Simulation\n\nYou can change updateTime (by default 200ms), maxProgress (by default 90%) and progressIncrease (by default 5%):\n\n```jsx\n<LoadingBar updateTime={100} maxProgress={95} progressIncrease={10} />\n```\n\nBy default, the Loading Bar will only display if the action took longer than `updateTime` to finish. This helps keep things feeling snappy, and avoids the annoyingness of showing a Loading Bar for fractions of seconds. If you want to show Loading Bar even on quickly finished actions you can pass the `showFastActions` prop:\n\n```jsx\n<LoadingBar showFastActions />\n```\n\n## Reset progress\n\nYou can dispatch the `resetLoading` action to ultimately hide Loading Bar even when multiple long running tasks are still in progress.\n\n## Tests\n\n```bash\nnpm test\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\nAdd unit tests for any new or changed functionality. Lint and test your code.\n\n## Contributors (in chronological order)\n\n- [@mironov](https://github.com/mironov)\n- [@ThomasMarnet](https://github.com/ThomasMarnet)\n- [@hieuhlc](https://github.com/hieuhlc)\n- [@josefernand](https://github.com/josefernand)\n- [@greenpart](https://github.com/greenpart)\n- [@larrydahooster](https://github.com/larrydahooster)\n- [@janslow](https://github.com/janslow)\n- [@vitosamson](https://github.com/vitosamson)\n- [@seb0zz](https://github.com/seb0zz)\n- [@neogermi](https://github.com/neogermi)\n- [@MikeDevice](https://github.com/MikeDevice)\n- [@Kovensky](https://github.com/Kovensky)\n- [@dengbupapapa](https://github.com/dengbupapapa)\n\nTo see what has changed in recent versions of Loading Bar, see the [CHANGELOG](https://github.com/mironov/react-redux-loading-bar/blob/master/CHANGELOG.md).\n\nLicensed MIT. Copyright 2016-current Anton Mironov.\n",
    "licenseText": "Copyright 2016-current Anton Mironov <ant.mironov@gmail.com>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-redux-loading-bar/-/react-redux-loading-bar-4.0.8.tgz#e84d59d1517b79f53b0f39c8ddb40682af648c1b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-redux-loading-bar/-/react-redux-loading-bar-4.0.8.tgz",
    "hash": "e84d59d1517b79f53b0f39c8ddb40682af648c1b",
    "integrity": "sha512-BpR1tlYrYKFtGhxa7nAKc0dpcV33ZgXJ/jKNLpDDaxu2/cCxbkWQt9YlWT+VLw1x/7qyNYY4DH48bZdtmciSpg==",
    "registry": "npm",
    "packageName": "react-redux-loading-bar",
    "cacheIntegrity": "sha512-BpR1tlYrYKFtGhxa7nAKc0dpcV33ZgXJ/jKNLpDDaxu2/cCxbkWQt9YlWT+VLw1x/7qyNYY4DH48bZdtmciSpg== sha1-6E1Z0VF7efU7DznI3bQGgq9kjBs="
  },
  "registry": "npm",
  "hash": "e84d59d1517b79f53b0f39c8ddb40682af648c1b"
}