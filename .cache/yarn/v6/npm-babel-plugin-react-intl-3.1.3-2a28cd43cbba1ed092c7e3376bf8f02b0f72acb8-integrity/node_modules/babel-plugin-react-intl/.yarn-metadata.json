{
  "manifest": {
    "name": "babel-plugin-react-intl",
    "version": "3.1.3",
    "description": "Extracts string messages for translation from modules that use React Intl.",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/formatjs/babel-plugin-react-intl.git"
    },
    "license": "BSD-3-Clause",
    "main": "lib/index.js",
    "author": {
      "name": "Eric Ferraiuolo",
      "email": "edf@ericf.me"
    },
    "dependencies": {
      "fs-extra": "^8.0.1",
      "intl-messageformat-parser": "^1.6.5"
    },
    "scripts": {
      "clean": "rimraf lib test/fixtures/**/actual.json",
      "test": "cross-env NODE_ENV=test jest",
      "cover": "npm t -- --coverage",
      "build": "babel src --out-dir lib",
      "prepublishOnly": "npm run build"
    },
    "keywords": [
      "babel-plugin",
      "react-intl"
    ],
    "bugs": {
      "url": "https://github.com/formatjs/babel-plugin-react-intl/issues"
    },
    "homepage": "https://github.com/formatjs/babel-plugin-react-intl#readme",
    "gitHead": "6c131ebfbd0431cc32520f6880e1ea917797a389",
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-babel-plugin-react-intl-3.1.3-2a28cd43cbba1ed092c7e3376bf8f02b0f72acb8-integrity/node_modules/babel-plugin-react-intl/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-plugin-react-intl\n\nExtracts string messages for translation from modules that use [React Intl][].\n## Dependencies\n\n### React Intl\nThis Babel plugin works with React Intl v2.x\n\n### Babel\n- **3.x** of this plugin works with Babel 7\n- **2.x** works with Babel 6\n- **1.x** works with Babel 5\n\n## Installation\n\n```sh\n$ npm install babel-plugin-react-intl\n```\n\n## Usage\n\n**This Babel plugin only visits ES6 modules which `import` React Intl.**\n\nThe default message descriptors for the app's default language will be extracted from: `defineMessages()`, `<FormattedMessage>`, and `<FormattedHTMLMessage>`; all of which are named exports of the React Intl package.\n\nIf a message descriptor has a `description`, it'll be removed from the source after it's extracted to save bytes since it isn't used at runtime.\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\n    [\"react-intl\", {\n        \"messagesDir\": \"./build/messages/\"\n    }]\n  ]\n}\n```\n\n#### Options\n\n- **`messagesDir`**: The target location where the plugin will output a `.json` file corresponding to each component from which React Intl messages were extracted. If not provided, the extracted message descriptors will only be accessible via Babel's API.\n\n- **`enforceDescriptions`**: Whether message declarations _must_ contain a `description` to provide context to translators. Defaults to: `false`.\n\n- **`extractSourceLocation`**: Whether the metadata about the location of the message in the source file should be extracted. If `true`, then `file`, `start`, and `end` fields will exist for each extracted message descriptors. Defaults to `false`.\n\n- **`moduleSourceName`**: The ES6 module source name of the React Intl package. Defaults to: `\"react-intl\"`, but can be changed to another name/path to React Intl.\n\n- **`overrideIdFn`**: A function with the signature `(id: string, defaultMessage: string, description: string|object) => string` which allows you to override the ID both in the extracted javascript and messages.\n\n- **`removeDefaultMessage`**: Remove `defaultMessage` field in generated js after extraction. \n\n- **`additionalComponentNames`**: Additional component names to extract messages from, e.g: `['FormattedFooBarMessage']`. **NOTE**: By default we check for the fact that `FormattedMessage` & `FormattedHTMLMessage` are imported from `moduleSourceName` to make sure variable alias works. This option does not do that so it's less safe.\n\n- **`extractFromFormatMessageCall`**: Opt-in to extract from `intl.formatMessage` call with the same restrictions, e.g: has to be called with object literal such as `intl.formatMessage({ id: 'foo', defaultMessage: 'bar', description: 'baz'})`\n\n### Via Node API\n\nThe extract message descriptors are available via the `metadata` property on the object returned from Babel's `transform()` API:\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['react-intl']\n}) // => { code, map, ast, metadata['react-intl'].messages };\n```\n\n[React Intl]: http://formatjs.io/react/\n",
    "licenseText": "Copyright (c) 2015, Yahoo Inc.\n\nLicensed under the terms of the New BSD license. See below for terms.\n\nRedistribution and use of this software in source and binary forms,\nwith or without modification, are permitted provided that the following\nconditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Yahoo Inc. nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission of Yahoo Inc.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-react-intl/-/babel-plugin-react-intl-3.1.3.tgz#2a28cd43cbba1ed092c7e3376bf8f02b0f72acb8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-react-intl/-/babel-plugin-react-intl-3.1.3.tgz",
    "hash": "2a28cd43cbba1ed092c7e3376bf8f02b0f72acb8",
    "integrity": "sha512-Fq2u6HqYt+pggUXe8DSqZaRA2W9LfOet1dQv1tD+KYcRjL9JW/DXNEn3GPjSw3bCHJiSuGyWPYO7MdbYRVsGDw==",
    "registry": "npm",
    "packageName": "babel-plugin-react-intl",
    "cacheIntegrity": "sha512-Fq2u6HqYt+pggUXe8DSqZaRA2W9LfOet1dQv1tD+KYcRjL9JW/DXNEn3GPjSw3bCHJiSuGyWPYO7MdbYRVsGDw== sha1-KijNQ8u6HtCSx+M3a/jwKw9yrLg="
  },
  "registry": "npm",
  "hash": "2a28cd43cbba1ed092c7e3376bf8f02b0f72acb8"
}