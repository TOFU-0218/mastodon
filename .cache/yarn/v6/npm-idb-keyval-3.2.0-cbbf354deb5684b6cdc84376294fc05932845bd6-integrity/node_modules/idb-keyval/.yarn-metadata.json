{
  "manifest": {
    "name": "idb-keyval",
    "version": "3.2.0",
    "description": "A super-simple-small keyval store built on top of IndexedDB",
    "main": "./dist/idb-keyval-cjs.js",
    "module": "./dist/idb-keyval.mjs",
    "types": "./dist/idb-keyval.d.ts",
    "scripts": {
      "build": "del dist && rollup -c && npm run compress-iife && npm run create-compat && npm run create-cjs-compat && npm run compress-amd",
      "compress-iife": "uglifyjs --compress --mangle -o dist/idb-keyval-iife.min.js dist/idb-keyval-iife.js",
      "create-compat": "babel dist/idb-keyval-iife.js | uglifyjs --compress --mangle > dist/idb-keyval-iife-compat.min.js",
      "create-cjs-compat": "babel dist/idb-keyval-cjs.js | uglifyjs --compress --mangle > dist/idb-keyval-cjs-compat.min.js",
      "compress-amd": "uglifyjs --compress --mangle -o dist/idb-keyval-amd.min.js dist/idb-keyval-amd.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jakearchibald/idb-keyval.git"
    },
    "keywords": [
      "idb",
      "indexeddb",
      "store",
      "keyval",
      "localstorage",
      "storage",
      "promise"
    ],
    "author": {
      "name": "Jake Archibald"
    },
    "contributors": [
      {
        "name": "Benny Powers"
      }
    ],
    "license": "Apache-2.0",
    "bugs": {
      "url": "https://github.com/jakearchibald/idb-keyval/issues"
    },
    "homepage": "https://github.com/jakearchibald/idb-keyval#readme",
    "devDependencies": {
      "babel-cli": "^6.26.0",
      "babel-preset-env": "^1.6.1",
      "del-cli": "^1.1.0",
      "rollup": "^0.56.5",
      "rollup-plugin-typescript2": "^0.12.0",
      "typescript": "^2.7.2",
      "uglify-es": "^3.3.9"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-idb-keyval-3.2.0-cbbf354deb5684b6cdc84376294fc05932845bd6-integrity/node_modules/idb-keyval/package.json",
    "readmeFilename": "README.md",
    "readme": "# IDB-Keyval\n\n[![npm](https://img.shields.io/npm/v/idb-keyval.svg)](https://www.npmjs.com/package/idb-keyval)\n[![size](http://img.badgesize.io/https://cdn.jsdelivr.net/npm/idb-keyval/dist/idb-keyval-iife.min.js?compression=gzip)](http://img.badgesize.io/https://cdn.jsdelivr.net/npm/idb-keyval/dist/idb-keyval-iife.min.js)\n\nThis is a super-simple-small promise-based keyval store implemented with IndexedDB, largely based on [async-storage by Mozilla](https://github.com/mozilla-b2g/gaia/blob/master/shared/js/async_storage.js).\n\n[localForage](https://github.com/localForage/localForage) offers similar functionality, but supports older browsers with broken/absent IDB implementations. Because of that, it's 7.4k, whereas idb-keyval is < 600 bytes. Also, it's tree-shaking friendly, so you'll probably end up using fewer than 500 bytes. Pick whichever works best for you!\n\nThis is only a keyval store. If you need to do more complex things like iteration & indexing, check out [IDB on NPM](https://www.npmjs.com/package/idb) (a little heavier at 1.7k). The first example in its README is how to recreate this library.\n\n## Usage\n\n### set:\n\n```js\nimport { set } from 'idb-keyval';\n\nset('hello', 'world');\nset('foo', 'bar');\n```\n\nSince this is IDB-backed, you can store anything structured-clonable (numbers, arrays, objects, dates, blobs etc).\n\nAll methods return promises:\n\n```js\nimport { set } from 'idb-keyval';\n\nset('hello', 'world')\n  .then(() => console.log('It worked!'))\n  .catch(err => console.log('It failed!', err));\n```\n\n### get:\n\n```js\nimport { get } from 'idb-keyval';\n\n// logs: \"world\"\nget('hello').then(val => console.log(val));\n```\n\nIf there is no 'hello' key, then `val` will be `undefined`.\n\n### keys:\n\n```js\nimport { keys } from 'idb-keyval';\n\n// logs: [\"hello\", \"foo\"]\nkeys().then(keys => console.log(keys));\n```\n\n### del:\n\n```js\nimport { del } from 'idb-keyval';\n\ndel('hello');\n```\n\n### clear:\n\n```js\nimport { clear } from 'idb-keyval';\n\nclear();\n```\n\n### Custom stores:\n\nBy default, the methods above use an IndexedDB database named `keyval-store` and an object store named `keyval`. You can create your own store, and pass it as an additional parameter to any of the above methods:\n\n```js\nimport { Store, set } from 'idb-keyval';\n\nconst customStore = new Store('custom-db-name', 'custom-store-name');\nset('foo', 'bar', customStore);\n```\n\nThat's it!\n\n## Installing\n\n### Via npm + webpack/rollup\n\n```sh\nnpm install idb-keyval\n```\n\nNow you can require/import `idb-keyval`:\n\n```js\nimport { get, set } from 'idb-keyval';\n```\n\nIf you're targeting older versions of IE, you may have more luck with:\n\n```js\nconst idb = require('idb-keyval/dist/idb-keyval-cjs-compat.min.js');\n```\n\n### Via `<script>`\n\n* `dist/idb-keyval.mjs` is a valid JS module.\n* `dist/idb-keyval-iife.js` can be used in browsers that don't support modules. `idbKeyval` is created as a global.\n* `dist/idb-keyval-iife.min.js` As above, but minified.\n* `dist/idb-keyval-iife-compat.min.js` As above, but works in older browsers such as IE 10.\n* `dist/idb-keyval-amd.js` is an AMD module.\n* `dist/idb-keyval-amd.min.js` As above, but minified.\n\nThese built versions are also available on jsDelivr, e.g.:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/idb-keyval@3/dist/idb-keyval-iife.min.js\"></script>\n<!-- Or in modern browsers: -->\n<script type=\"module\">\n  import { get, set } from 'https://cdn.jsdelivr.net/npm/idb-keyval@3/dist/idb-keyval.mjs';\n</script>\n```\n\n## Updating from 2.x\n\n2.x exported an object with methods:\n\n```js\n// This no longer works in 3.x\nimport idbKeyval from 'idb-keyval';\n\nidbKeyval.set('foo', 'bar');\n```\n\nWhereas in 3.x you import the methods directly:\n\n```js\nimport { set } from 'idb-keyval';\n\nset('foo', 'bar');\n```\n\nThis is better for minification, and allows tree shaking.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/idb-keyval/-/idb-keyval-3.2.0.tgz#cbbf354deb5684b6cdc84376294fc05932845bd6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/idb-keyval/-/idb-keyval-3.2.0.tgz",
    "hash": "cbbf354deb5684b6cdc84376294fc05932845bd6",
    "integrity": "sha512-slx8Q6oywCCSfKgPgL0sEsXtPVnSbTLWpyiDcu6msHOyKOLari1TD1qocXVCft80umnkk3/Qqh3lwoFt8T/BPQ==",
    "registry": "npm",
    "packageName": "idb-keyval",
    "cacheIntegrity": "sha512-slx8Q6oywCCSfKgPgL0sEsXtPVnSbTLWpyiDcu6msHOyKOLari1TD1qocXVCft80umnkk3/Qqh3lwoFt8T/BPQ== sha1-y781TetWhLbNyEN2KU/AWTKEW9Y="
  },
  "registry": "npm",
  "hash": "cbbf354deb5684b6cdc84376294fc05932845bd6"
}