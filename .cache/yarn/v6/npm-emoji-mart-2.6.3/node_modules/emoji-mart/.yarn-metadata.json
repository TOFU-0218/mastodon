{
  "manifest": {
    "name": "emoji-mart",
    "version": "2.6.3",
    "description": "Customizable Slack-like emoji picker for React",
    "main": "dist/index.js",
    "module": "dist-es/index.js",
    "repository": {
      "type": "git",
      "url": "git@github.com:missive/emoji-mart.git"
    },
    "keywords": [
      "react",
      "emoji",
      "picker"
    ],
    "author": {
      "name": "Etienne Lemay"
    },
    "license": "BSD-3-Clause",
    "bugs": {
      "url": "https://github.com/missive/emoji-mart/issues"
    },
    "homepage": "https://github.com/missive/emoji-mart",
    "dependencies": {},
    "peerDependencies": {
      "react": "^0.14.0 || ^15.0.0-0 || ^16.0.0"
    },
    "devDependencies": {
      "@storybook/addon-actions": "^3.2.11",
      "@storybook/addon-knobs": "^3.2.10",
      "@storybook/addon-links": "^3.2.10",
      "@storybook/addon-options": "3.2.10",
      "@storybook/react": "^3.2.11",
      "babel-cli": "^6.26.0",
      "babel-core": "6.7.2",
      "babel-loader": "^7.1.2",
      "babel-plugin-module-resolver": "2.7.1",
      "babel-plugin-transform-define": "^1.3.0",
      "babel-plugin-transform-es2015-destructuring": "6.9.0",
      "babel-plugin-transform-object-rest-spread": "6.8.0",
      "babel-plugin-transform-react-remove-prop-types": "^0.4.8",
      "babel-plugin-transform-runtime": "^6.23.0",
      "babel-preset-es2015": "6.6.0",
      "babel-preset-react": "6.5.0",
      "babel-runtime": "^6.26.0",
      "emoji-datasource": "4.0.4",
      "emojilib": "^2.2.1",
      "inflection": "1.10.0",
      "jasmine-core": "^2.5.2",
      "karma": "^1.4.0",
      "karma-chrome-launcher": "^2.0.0",
      "karma-cli": "^1.0.1",
      "karma-jasmine": "^1.1.0",
      "karma-webpack": "^2.0.4",
      "mkdirp": "0.5.1",
      "prettier": "1.11.1",
      "prop-types": "^15.6.0",
      "react": "^16.0.0",
      "react-dom": "^16.0.0",
      "rimraf": "2.5.2",
      "size-limit": "^0.11.4",
      "webpack": "^3.6.0"
    },
    "scripts": {
      "clean": "rm -rf dist/ dist-es/",
      "build:data": "node scripts/build-data",
      "build:dist": "npm run build:cjs && npm run build:es",
      "build:cjs": "BABEL_ENV=cjs babel src --out-dir dist --copy-files",
      "build:es": "babel src --out-dir dist-es --copy-files",
      "build:docs": "cp css/emoji-mart.css docs && webpack --config ./docs/webpack.config.js",
      "build": "npm run clean && npm run build:dist",
      "watch": "BABEL_ENV=cjs babel src --watch --out-dir dist --copy-files",
      "start": "npm run watch",
      "stats": "webpack --config ./spec/webpack.config.js --json > spec/stats.json",
      "react:clean": "rimraf node_modules/{react,react-dom,react-addons-test-utils}",
      "react:14": "npm run react:clean && npm i react@^0.14 react-dom@^0.14 react-addons-test-utils@^0.14 --save-dev",
      "react:15": "npm run react:clean && npm i react@^15 react-dom@^15 react-addons-test-utils@^15 --save-dev",
      "test": "NODE_ENV=test karma start && size-limit",
      "prepublishOnly": "npm run build",
      "storybook": "start-storybook -p 6006",
      "build-storybook": "build-storybook",
      "prettier": "prettier --write \"{src,scripts,spec}/**/*.js\""
    },
    "size-limit": [
      {
        "path": "dist-es/index.js",
        "limit": "80 KB"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-emoji-mart-2.6.3/node_modules/emoji-mart/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <br><b>Emoji Mart</b> is a Slack-like customizable<br>emoji picker component for React\n  <br><a href=\"https://missive.github.io/emoji-mart\">Demo</a> ‚Ä¢ <a href=\"https://github.com/missive/emoji-mart/releases\">Changelog</a>\n  <br><br><img width=\"338\" alt=\"picker\" src=\"https://user-images.githubusercontent.com/436043/32532554-08be471c-c400-11e7-906a-c745dc3ec630.png\">\n  <br><br><a title=\"Team email, team chat, team tasks, one app\" href=\"https://missiveapp.com\"><img width=\"30\" alt=\"Missive | Team email, team chat, team tasks, one app\" src=\"https://user-images.githubusercontent.com/436043/32532559-0d15ddfc-c400-11e7-8a24-64d0157d0cb0.png\"></a>\n  <br>Brought to you by the <a title=\"Team email, team chat, team tasks, one app\" href=\"https://missiveapp.com\">Missive</a> team\n</div>\n\n## Installation\n\n`npm install --save emoji-mart`\n\n## Components\n### Picker\n```jsx\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\n<Picker set='emojione' />\n<Picker onSelect={this.addEmoji} />\n<Picker title='Pick your emoji‚Ä¶' emoji='point_up' />\n<Picker style={{ position: 'absolute', bottom: '20px', right: '20px' }} />\n<Picker i18n={{ search: 'Recherche', categories: { search: 'R√©sultats de recherche', recent: 'R√©cents' } }} />\n```\n\n| Prop | Required | Default | Description |\n| ---- | :------: | ------- | ----------- |\n| **autoFocus** | | `false` | Auto focus the search input when mounted |\n| **color** | | `#ae65c5` | The top bar anchors select and hover color |\n| **emoji** | | `department_store` | The emoji shown when no emojis are hovered, set to an empty string to show nothing |\n| **include** | | `[]` | Only load included categories. Accepts [I18n categories keys](#i18n). Order will be respected, except for the `recent` category which will always be the first. |\n| **exclude** | | `[]` | Don't load excluded categories. Accepts [I18n categories keys](#i18n). |\n| **custom** | | `[]` | [Custom emojis](#custom-emojis) |\n| **recent** | | | Pass your own frequently used emojis as array of string IDs |\n| **emojiSize** | | `24` | The emoji width and height |\n| **onClick** | | | Params: `(emoji, event) => {}`. Not called when emoji is selected with `enter` |\n| **onSelect** | | | Params: `(emoji) => {}`  |\n| **onSkinChange** | | | Params: `(skin) => {}` |\n| **perLine** | | `9` | Number of emojis per line. While there‚Äôs no minimum or maximum, this will affect the picker‚Äôs width. This will set *Frequently Used* length as well (`perLine * 4`) |\n| **i18n** | | [`{‚Ä¶}`](#i18n) | [An object](#i18n) containing localized strings |\n| **native** | | `false` | Renders the native unicode emoji |\n| **set** | | `apple` | The emoji set: `'apple', 'google', 'twitter', 'emojione', 'messenger', 'facebook'` |\n| **sheetSize** | | `64` | The emoji [sheet size](#sheet-sizes): `16, 20, 32, 64` |\n| **backgroundImageFn** | | ```((set, sheetSize) => ‚Ä¶)``` | A Fn that returns that image sheet to use for emojis. Useful for avoiding a request if you have the sheet locally. |\n| **emojisToShowFilter** | | ```((emoji) => true)``` | A Fn to choose whether an emoji should be displayed or not |\n| **showPreview** | | `true` | Display preview section |\n| **showSkinTones** | | `true` | Display skin tones picker |\n| **emojiTooltip** | | `false` | Show emojis short name when hovering (title) |\n| **skin** | | | Forces skin color: `1, 2, 3, 4, 5, 6` |\n| **defaultSkin** | | `1` | Default skin color: `1, 2, 3, 4, 5, 6` |\n| **style** | | | Inline styles applied to the root element. Useful for positioning |\n| **title** | | `Emoji Mart‚Ñ¢` | The title shown when no emojis are hovered |\n\n#### I18n\n```js\nsearch: 'Search',\nnotfound: 'No Emoji Found',\ncategories: {\n  search: 'Search Results',\n  recent: 'Frequently Used',\n  people: 'Smileys & People',\n  nature: 'Animals & Nature',\n  foods: 'Food & Drink',\n  activity: 'Activity',\n  places: 'Travel & Places',\n  objects: 'Objects',\n  symbols: 'Symbols',\n  flags: 'Flags',\n  custom: 'Custom',\n}\n```\n\n#### Sheet sizes\nSheets are served from [unpkg](https://unpkg.com), a global CDN that serves files published to [npm](https://www.npmjs.com).\n\n| Set       | Size (`sheetSize: 16`) | Size (`sheetSize: 20`) | Size (`sheetSize: 32`) | Size (`sheetSize: 64`) |\n| --------- | ---------------------- | ---------------------- | ---------------------- | ---------------------- |\n| apple     | 334 KB                 | 459 KB                 | 1.08 MB                | 2.94 MB                |\n| emojione  | 315 KB                 | 435 KB                 | 1020 KB                | 2.33 MB                |\n| facebook  | 322 KB                 | 439 KB                 | 1020 KB                | 2.50 MB                |\n| google    | 301 KB                 | 409 KB                 |  907 KB                | 2.17 MB                |\n| messenger | 325 KB                 | 449 MB                 | 1.05 MB                | 2.69 MB                |\n| twitter   | 288 KB                 | 389 KB                 |  839 KB                | 1.82 MB                |\n\n#### Datasets\nWhile all sets are available by default, you may want to include only a single set data to reduce the size of your bundle.\n\n| Set       | Size (on disk) |\n| --------- | -------------- |\n| all       | 570 KB         |\n| apple     | 484 KB         |\n| emojione  | 485 KB         |\n| facebook  | 421 KB         |\n| google    | 483 KB         |\n| messenger | 197 KB         |\n| twitter   | 484 KB         |\n\nTo use these data files (or any other custom data), use the `NimblePicker` component:\n\n```js\nimport data from 'emoji-mart/data/messenger.json'\nimport { NimblePicker } from 'emoji-mart'\n\n<NimblePicker set='messenger' data={data} />\n```\n\n#### Examples of `emoji` object:\n```js\n{\n  id: 'smiley',\n  name: 'Smiling Face with Open Mouth',\n  colons: ':smiley:',\n  text: ':)',\n  emoticons: [\n    '=)',\n    '=-)'\n  ],\n  skin: null,\n  native: 'üòÉ'\n}\n\n{\n  id: 'santa',\n  name: 'Father Christmas',\n  colons: ':santa::skin-tone-3:',\n  text: '',\n  emoticons: [],\n  skin: 3,\n  native: 'üéÖüèº'\n}\n\n{\n  id: 'octocat',\n  name: 'Octocat',\n  colons: ':octocat',\n  text: '',\n  emoticons: [],\n  custom: true,\n  imageUrl: 'https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7'\n}\n\n```\n\n### Emoji\n```jsx\nimport { Emoji } from 'emoji-mart'\n\n<Emoji emoji={{ id: 'santa', skin: 3 }} size={16} />\n<Emoji emoji=':santa::skin-tone-3:' size={16} />\n<Emoji emoji='santa' set='emojione' size={16} />\n```\n\n| Prop | Required | Default | Description |\n| ---- | :------: | ------- | ----------- |\n| **emoji** | ‚úì | | Either a string or an `emoji` object |\n| **size** | ‚úì | | The emoji width and height. |\n| **native** | | `false` | Renders the native unicode emoji |\n| **onClick** | | | Params: `(emoji, event) => {}` |\n| **onLeave** | | | Params: `(emoji, event) => {}` |\n| **onOver** | | | Params: `(emoji, event) => {}` |\n| [**fallback**](#unsupported-emojis-fallback) | | | Params: `(emoji) => {}` |\n| **set** | | `apple` | The emoji set: `'apple', 'google', 'twitter', 'emojione'` |\n| **sheetSize** | | `64` | The emoji [sheet size](#sheet-sizes): `16, 20, 32, 64` |\n| **backgroundImageFn** | | ```((set, sheetSize) => `https://unpkg.com/emoji-datasource@3.0.0/sheet_${set}_${sheetSize}.png`)``` | A Fn that returns that image sheet to use for emojis. Useful for avoiding a request if you have the sheet locally. |\n| **skin** | | `1` | Skin color: `1, 2, 3, 4, 5, 6` |\n| **tooltip** | | `false` | Show emoji short name when hovering (title) |\n| [**html**](#using-with-dangerouslysetinnerhtml) | | `false` | Returns an HTML string to use with `dangerouslySetInnerHTML` |\n\n#### Unsupported emojis fallback\nCertain sets don‚Äôt support all emojis (i.e. Messenger & Facebook don‚Äôt support `:shrug:`). By default the Emoji component will not render anything so that the emojis‚Äô don‚Äôt take space in the picker when not available. When using the standalone Emoji component, you can however render anything you want by providing the `fallback` props.\n\nTo have the component render `:shrug:` you would need to:\n\n```js\n<Emoji\n  set={'messenger'}\n  emoji={'shrug'}\n  size={24}\n  fallback={(emoji) => {\n    return `:${emoji.short_names[0]}:`\n  }}\n/>\n```\n\n#### Using with `dangerouslySetInnerHTML`\nThe Emoji component being a [functional component](https://medium.com/missive-app/45-faster-react-functional-components-now-3509a668e69f), you can call it as you would call any function instead of using JSX. Make sure you pass `html: true` for it to return an HTML string.\n\n```js\n<span dangerouslySetInnerHTML={{\n  __html: Emoji({\n    html: true\n    set: 'apple'\n    emoji: '+1'\n    size: 24\n  })\n}}></span>\n```\n\n#### Using with `contentEditable`\nFollowing the `dangerouslySetInnerHTML` example above, make sure the wrapping `span` sets `contenteditable=\"false\"`.\n\n```js\n<div contentEditable={true}>\n  Looks good to me\n\n  <span contentEditable={false} dangerouslySetInnerHTML={{\n    __html: Emoji({\n      html: true\n      set: 'apple'\n      emoji: '+1'\n      size: 24\n    })\n  }}></span>\n</div>\n```\n\n## Custom emojis\nYou can provide custom emojis which will show up in their own category.\n\n```js\nimport { Picker } from 'emoji-mart'\n\nconst customEmojis = [\n  {\n    name: 'Octocat',\n    short_names: ['octocat'],\n    text: '',\n    emoticons: [],\n    keywords: ['github'],\n    imageUrl: 'https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7'\n  },\n]\n\n<Picker custom={customEmojis} />\n```\n\n## Headless search\nThe `Picker` doesn‚Äôt have to be mounted for you to take advantage of the advanced search results.\n\n```js\nimport { emojiIndex } from 'emoji-mart'\n\nemojiIndex.search('christmas').map((o) => o.native)\n// => [üéÑ, üéÖüèº, üîî, üéÅ, ‚õÑÔ∏è, ‚ùÑÔ∏è]\n```\n\n### With custom data\n```js\nimport data from 'emoji-mart/datasets/messenger'\nimport { NimbleEmojiIndex } from 'emoji-mart'\n\nlet emojiIndex = new NimbleEmojiIndex(data)\nemojiIndex.search('christmas')\n```\n\n## Storage\nBy default EmojiMart will store user chosen skin and frequently used emojis in `localStorage`. That can however be overwritten should you want to store these in your own storage.\n\n```js\nimport { store } from 'emoji-mart'\n\nstore.setHandlers({\n  getter: (key) => {\n    // Get from your own storage (sync)\n  },\n\n  setter: (key, value) => {\n    // Persist in your own storage (can be async)\n  }\n})\n```\n\nPossible keys are:\n\n| Key | Value | Description |\n| --- | ----- | ----------- |\n| skin | `1, 2, 3, 4, 5, 6` | |\n| frequently | `{ 'astonished': 11, '+1': 22 }` | An object where the key is the emoji name and the value is the usage count |\n| last | 'astonished' | (Optional) Used by `frequently` to be sure the latest clicked emoji will always appear in the ‚ÄúRecent‚Äù category |\n\n## Features\n### Powerful search\n#### Short name, name and keywords\nNot only does **Emoji Mart** return more results than most emoji picker, they‚Äôre more accurate and sorted by relevance.\n\n<img width=\"338\" alt=\"summer\" src=\"https://user-images.githubusercontent.com/436043/32532567-179f1be4-c400-11e7-885e-df6e9b52c665.png\">\n\n#### Emoticons\nThe only emoji picker that returns emojis when searching for emoticons.\n\n<img width=\"338\" alt=\"emoticons\" src=\"https://user-images.githubusercontent.com/436043/32532570-1be0dd28-c400-11e7-90cd-f33396277602.png\">\n\n#### Results intersection\nFor better results, **Emoji Mart** split search into words and only returns results matching both terms.\n\n<img width=\"338\" alt=\"high-five\" src=\"https://user-images.githubusercontent.com/436043/32532573-1f4a9d1e-c400-11e7-8656-921bc6c09732.png\">\n\n### Fully customizable\n#### Anchors color, title and default emoji\n<img width=\"338\" alt=\"customizable-color\" src=\"https://user-images.githubusercontent.com/436043/32532582-302dc9e4-c400-11e7-9b97-f37c447231ca.png\"><br><img width=\"338\" alt=\"pick-your-emoji\" src=\"https://user-images.githubusercontent.com/436043/32532585-34546faa-c400-11e7-9c9d-fbbe830d4368.png\">\n\n#### Emojis sizes and length\n<img width=\"296\" alt=\"size-and-length\" src=\"https://user-images.githubusercontent.com/436043/32532590-381f67de-c400-11e7-86f6-328e30d6b116.png\">\n\n#### Default skin color\nAs the developer, you have control over which skin color is used by default.\n\n<img width=\"205\" alt=\"skins\" src=\"https://user-images.githubusercontent.com/436043/32532858-0a559560-c402-11e7-8680-f77f780a5a49.png\">\n\nIt can however be overwritten as per user preference.\n\n<img width=\"98\" alt=\"customizable-skin\" src=\"https://user-images.githubusercontent.com/436043/32532883-2c620e7c-c402-11e7-976c-50d32be0566c.png\">\n\n#### Multiple sets supported\nApple / Google / Twitter / EmojiOne / Messenger / Facebook\n\n<img width=\"214\" alt=\"sets\" src=\"https://user-images.githubusercontent.com/436043/33786868-d4226e60-dc38-11e7-840a-e4cf490f5f4a.png\">\n\n## Not opinionated\n**Emoji Mart** doesn‚Äôt automatically insert anything into a text input, nor does it show or hide itself. It simply returns an `emoji` object. It‚Äôs up to the developer to mount/unmount (it‚Äôs fast!) and position the picker. You can use the returned object as props for the `EmojiMart.Emoji` component. You could also use `emoji.colons` to insert text into a textarea or `emoji.native` to use the emoji.\n\n## Development\n```sh\n$ yarn build\n$ yarn start\n$ yarn storybook\n```\n\n## üé© Hat tips!\nPowered by [iamcal/emoji-data](https://github.com/iamcal/emoji-data) and inspired by [iamcal/js-emoji](https://github.com/iamcal/js-emoji).<br>\nüôåüèº ¬†[Cal Henderson](https://github.com/iamcal).\n\n<br><br>\n<div align=\"center\">\n  <a title=\"Team email, team chat, team tasks, one app\" href=\"https://missiveapp.com\"><img width=\"64\" alt=\"Missive | Team email, team chat, team tasks, one app\" src=\"https://user-images.githubusercontent.com/436043/32532559-0d15ddfc-c400-11e7-8a24-64d0157d0cb0.png\"></a>\n  <br><a title=\"Team email, team chat, team tasks, one app\" href=\"https://missiveapp.com\">Missive</a> mixes team email and threaded group chat for productive teams.\n  <br>A single app for all your internal and external communication and a full work management solution.\n</div>\n",
    "licenseText": "Copyright (c) 2016, Missive\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://codeload.github.com/Gargron/emoji-mart/tar.gz/934f314fd8322276765066e8a2a6be5bac61b1cf",
    "type": "tarball",
    "reference": "https://codeload.github.com/Gargron/emoji-mart/tar.gz/934f314fd8322276765066e8a2a6be5bac61b1cf",
    "hash": "",
    "registry": "npm",
    "packageName": "emoji-mart",
    "cacheIntegrity": "sha1-F2iqarPWuSb0V+CCvU7XJ59vyc8="
  },
  "registry": "npm",
  "hash": "1768aa6ab3d6b926f457e082bd4ed7279f6fc9cf"
}