{
  "manifest": {
    "name": "http-link-header",
    "version": "1.0.2",
    "description": "Parse & format HTTP link headers according to RFC 8288",
    "author": {
      "name": "Jonas Hermsmeier",
      "email": "jhermsmeier@gmail.com",
      "url": "https://jhermsmeier.de"
    },
    "license": "MIT",
    "keywords": [
      "rfc5988",
      "rfc8288",
      "rfc",
      "5988",
      "8288",
      "http",
      "link",
      "header"
    ],
    "main": "lib/link.js",
    "scripts": {
      "benchmark": "node benchmark",
      "test": "mocha --ui tdd"
    },
    "dependencies": {},
    "devDependencies": {
      "mocha": "^5.2.0",
      "nanobench": "^2.1.1"
    },
    "homepage": "https://github.com/jhermsmeier/node-http-link-header",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jhermsmeier/node-http-link-header.git"
    },
    "bugs": {
      "url": "https://github.com/jhermsmeier/node-http-link-header/issues"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-http-link-header-1.0.2-bea50f02e1c7996021f1013b428c63f77e0f4e11-integrity/node_modules/http-link-header/package.json",
    "contributors": [
      {
        "name": "Jonas Hermsmeier",
        "email": "jhermsmeier@gmail.com"
      },
      {
        "name": "Dale Hui",
        "email": "dhui@users.noreply.github.com"
      },
      {
        "name": "Matteo Brancaleoni",
        "email": "mbrancaleoni@gmail.com"
      },
      {
        "name": "Yamagishi Kazutoshi",
        "email": "ykzts@desire.sh"
      }
    ],
    "readmeFilename": "README.md",
    "readme": "# HTTP Link Header\n[![npm](https://img.shields.io/npm/v/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![npm license](https://img.shields.io/npm/l/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![npm downloads](https://img.shields.io/npm/dm/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![build status](https://img.shields.io/travis/jhermsmeier/node-http-link-header.svg?style=flat-square)](https://travis-ci.org/jhermsmeier/node-http-link-header)\n\nParse & format HTTP link headers according to [RFC 8288]\n\n[RFC 8288]: https://tools.ietf.org/html/rfc8288\n\n## Install via [npm](https://npmjs.com)\n\n```sh\n$ npm install --save http-link-header\n```\n\n## Usage\n\n```js\nvar LinkHeader = require( 'http-link-header' )\n```\n\n### Parsing a HTTP link header\n\n```js\nvar link = LinkHeader.parse(\n  '<example.com>; rel=\"example\"; title=\"Example Website\", ' +\n  '<example-01.com>; rel=\"alternate\"; title=\"Alternate Example Domain\"'\n)\n\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n  ]\n}\n```\n\n### Checking whether it has a reference with a given attribute & value\n\n```js\nlink.has( 'rel', 'alternate' )\n> true\n```\n\n### Retrieving a reference with a given attribute & value\n\n```js\nlink.get( 'rel', 'alternate' )\n> [\n  { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' }\n]\n```\n```js\n// Shorthand for `rel` attributes\nlink.rel( 'alternate' )\n> [\n  { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' }\n]\n```\n\n### Setting references\n\n```js\nlink.set({ rel: 'next', uri: 'http://example.com/next' })\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n    { rel: 'next', uri: 'http://example.com/next' }\n  ]\n}\n```\n\n### Parsing multiple headers\n\n```js\nvar link = new LinkHeader()\n\nlink.parse( '<example.com>; rel=\"example\"; title=\"Example Website\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n  ]\n}\n\nlink.parse( '<example-01.com>; rel=\"alternate\"; title=\"Alternate Example Domain\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n  ]\n}\n\nlink.parse( '<example-02.com>; rel=\"alternate\"; title=\"Second Alternate Example Domain\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n    { uri: 'example-02.com', rel: 'alternate', title: 'Second Alternate Example Domain' },\n  ]\n}\n```\n\n### Handling extended attributes\n\n```js\nlink.parse( '</extended-attr-example>; rel=start; title*=UTF-8\\'en\\'%E2%91%A0%E2%93%AB%E2%85%93%E3%8F%A8%E2%99%B3%F0%9D%84%9E%CE%BB' )\n```\n\n```js\n> Link {\n  refs: [\n    { uri: '/extended-attr-example', rel: 'start', 'title*': { language: 'en', encoding: null, value: '①⓫⅓㏨♳𝄞λ' } }\n  ]\n}\n```\n\n### Stringifying to HTTP header format\n\n```js\nlink.toString()\n> '<example.com>; rel=example; title=\"Example Website\", <example-01.com>; rel=alternate; title=\"Alternate Example Domain\"'\n```\n\n## Speed\n\n```\n$ npm run benchmark\n```\n\n```\n# http-link-header .parse() ⨉ 1000000\nok ~1.29 s (1 s + 289696759 ns)\n\n# http-link-header #toString() ⨉ 1000000\nok ~554 ms (0 s + 553782657 ns)\n```\n",
    "licenseText": "# The MIT License (MIT)\nCopyright (c) 2016 Jonas Hermsmeier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/http-link-header/-/http-link-header-1.0.2.tgz#bea50f02e1c7996021f1013b428c63f77e0f4e11",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/http-link-header/-/http-link-header-1.0.2.tgz",
    "hash": "bea50f02e1c7996021f1013b428c63f77e0f4e11",
    "integrity": "sha512-z6YOZ8ZEnejkcCWlGZzYXNa6i+ZaTfiTg3WhlV/YvnNya3W/RbX1bMVUMTuCrg/DrtTCQxaFCkXCz4FtLpcebg==",
    "registry": "npm",
    "packageName": "http-link-header",
    "cacheIntegrity": "sha512-z6YOZ8ZEnejkcCWlGZzYXNa6i+ZaTfiTg3WhlV/YvnNya3W/RbX1bMVUMTuCrg/DrtTCQxaFCkXCz4FtLpcebg== sha1-vqUPAuHHmWAh8QE7Qoxj934PThE="
  },
  "registry": "npm",
  "hash": "bea50f02e1c7996021f1013b428c63f77e0f4e11"
}