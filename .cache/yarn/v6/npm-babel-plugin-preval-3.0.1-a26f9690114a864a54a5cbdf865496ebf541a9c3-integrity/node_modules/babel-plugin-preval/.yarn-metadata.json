{
  "manifest": {
    "name": "babel-plugin-preval",
    "version": "3.0.1",
    "description": "Pre-evaluate code at build-time",
    "engines": {
      "node": ">=4",
      "npm": ">=3"
    },
    "main": "dist/index.js",
    "scripts": {
      "add-contributor": "kcd-scripts contributors add",
      "build": "kcd-scripts build",
      "lint": "kcd-scripts lint",
      "test": "kcd-scripts test",
      "test:update": "npm test -- --updateSnapshot --coverage",
      "validate": "kcd-scripts validate",
      "precommit": "kcd-scripts precommit"
    },
    "files": [
      "dist",
      "macro.js"
    ],
    "keywords": [
      "babel",
      "babel-plugin",
      "eval",
      "precompile",
      "babel-plugin-macros"
    ],
    "author": {
      "name": "Kent C. Dodds",
      "email": "kent@doddsfamily.us",
      "url": "http://kentcdodds.com/"
    },
    "license": "MIT",
    "dependencies": {
      "babel-plugin-macros": "^2.2.2",
      "require-from-string": "^2.0.2"
    },
    "devDependencies": {
      "ast-pretty-print": "^2.0.1",
      "babel-plugin-tester": "^5.4.0",
      "kcd-scripts": "^0.39.1"
    },
    "eslintConfig": {
      "extends": "./node_modules/kcd-scripts/eslint.js"
    },
    "eslintIgnore": [
      "node_modules",
      "coverage",
      "dist"
    ],
    "babel": {
      "presets": "kcd-scripts/babel"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/kentcdodds/babel-plugin-preval.git"
    },
    "bugs": {
      "url": "https://github.com/kentcdodds/babel-plugin-preval/issues"
    },
    "homepage": "https://github.com/kentcdodds/babel-plugin-preval#readme",
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-babel-plugin-preval-3.0.1-a26f9690114a864a54a5cbdf865496ebf541a9c3-integrity/node_modules/babel-plugin-preval/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n<h1>babel-plugin-preval</h1>\n\nPre-evaluate code at build-time\n\n</div>\n\n<hr />\n\n<!-- prettier-ignore-start -->\n\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package]\n[![downloads][downloads-badge]][npmtrends]\n[![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-14-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs]\n[![Code of Conduct][coc-badge]][coc]\n[![Babel Macro][macros-badge]][babel-plugin-macros]\n[![Examples][examples-badge]][examples]\n\n[![Watch on GitHub][github-watch-badge]][github-watch]\n[![Star on GitHub][github-star-badge]][github-star]\n[![Tweet][twitter-badge]][twitter]\n\n<!-- prettier-ignore-end -->\n\n## The problem\n\nYou need to do some dynamic stuff, but don't want to do it at runtime. Or maybe\nyou want to do stuff like read the filesystem to get a list of files and you\ncan't do that in the browser.\n\n## This solution\n\nThis allows you to specify some code that runs in Node and whatever you\n`module.exports` in there will be swapped. For example:\n\n```js\nconst x = preval`module.exports = 1`\n\n//      ↓ ↓ ↓ ↓ ↓ ↓\n\nconst x = 1\n```\n\nOr, more interestingly:\n\n```javascript\nconst x = preval`\n  const fs = require('fs')\n  const val = fs.readFileSync(__dirname + '/fixture1.md', 'utf8')\n  module.exports = {\n    val,\n    getSplit: function(splitDelimiter) {\n      return x.val.split(splitDelimiter)\n    }\n  }\n`\n\n//      ↓ ↓ ↓ ↓ ↓ ↓\n\nconst x = {\n  val: '# fixture\\n\\nThis is some file thing...\\n',\n  getSplit: function getSplit(splitDelimiter) {\n    return x.val.split(splitDelimiter)\n  },\n}\n```\n\nThere's also `preval.require('./something')` and\n`import x from /* preval */ './something'` (which can both take some arguments)\nor add `// @preval` comment at the top of a file.\n\nSee more below.\n\n## Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Template Tag](#template-tag)\n  - [import comment](#import-comment)\n  - [preval.require](#prevalrequire)\n  - [preval file comment (`// @preval`)](#preval-file-comment--preval)\n- [Configure with Babel](#configure-with-babel)\n  - [Via `.babelrc` (Recommended)](#via-babelrc-recommended)\n  - [Via CLI](#via-cli)\n  - [Via Node API](#via-node-api)\n- [Use with `babel-plugin-macros`](#use-with-babel-plugin-macros)\n- [Examples](#examples)\n- [Notes](#notes)\n- [FAQ](#faq)\n  - [How is this different from prepack?](#how-is-this-different-from-prepack)\n  - [How is this different from webpack loaders?](#how-is-this-different-from-webpack-loaders)\n- [Inspiration](#inspiration)\n- [Related Projects](#related-projects)\n- [Other Solutions](#other-solutions)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev babel-plugin-preval\n```\n\n## Usage\n\nImportant notes:\n\n1.  All code run by `preval` is _not_ run in a sandboxed environment\n2.  All code _must_ run synchronously.\n3.  Code that is run by preval is not transpiled so it must run natively in the\n    version of node you're running. (cannot use es modules).\n\n> You may like to watch\n> [this YouTube video](https://www.youtube.com/watch?v=1queadQ0048&list=PLV5CVI1eNcJgCrPH_e6d57KRUTiDZgs0u)\n> to get an idea of what preval is and how it can be used.\n\n### Template Tag\n\n**Before**:\n\n```javascript\nconst greeting = preval`\n  const fs = require('fs')\n  module.exports = fs.readFileSync(require.resolve('./greeting.txt'), 'utf8')\n`\n```\n\n**After** (assuming `greeting.txt` contains the text: `\"Hello world!\"`):\n\n```javascript\nconst greeting = 'Hello world!'\n```\n\n`preval` can also handle _some_ simple dynamic values as well:\n\n**Before**:\n\n```javascript\nconst name = 'Bob Hope'\nconst person = preval`\n  const [first, last] = require('./name-splitter')(${name})\n  module.exports = {first, last}\n`\n```\n\n**After** (assuming `./name-splitter` is a function that splits a name into\nfirst/last):\n\n```javascript\nconst name = 'Bob Hope'\nconst person = {first: 'Bob', last: 'Hope'}\n```\n\n### import comment\n\n**Before**:\n\n```javascript\nimport fileList from /* preval */ './get-list-of-files'\n```\n\n**After** (depending on what `./get-list-of-files does`, it might be something\nlike):\n\n```javascript\nconst fileList = ['file1.md', 'file2.md', 'file3.md', 'file4.md']\n```\n\nYou can also provide arguments which themselves are prevaled!\n\n**Before**:\n\n```javascript\nimport fileList from /* preval(3) */ './get-list-of-files'\n```\n\n**After** (assuming `./get-list-of-files` accepts an argument limiting how many\nfiles are retrieved:\n\n```javascript\nconst fileList = ['file1.md', 'file2.md', 'file3.md']\n```\n\n### preval.require\n\n**Before**:\n\n```javascript\nconst fileLastModifiedDate = preval.require('./get-last-modified-date')\n```\n\n**After**:\n\n```javascript\nconst fileLastModifiedDate = '2017-07-05'\n```\n\nAnd you can provide _some_ simple dynamic arguments as well:\n\n**Before**:\n\n```javascript\nconst fileLastModifiedDate = preval.require(\n  './get-last-modified-date',\n  '../../some-other-file.js',\n)\n```\n\n**After**:\n\n```javascript\nconst fileLastModifiedDate = '2017-07-04'\n```\n\n### preval file comment (`// @preval`)\n\nUsing the preval file comment will update a whole file to be evaluated down to\nan export.\n\nWhereas the above usages (assignment/import/require) will only preval the scope\nof the assignment or file being imported.\n\n**Before**:\n\n```javascript\n// @preval\n\nconst id = require('./path/identity')\nconst one = require('./path/one')\n\nconst compose = (...fns) => fns.reduce((f, g) => a => f(g(a)))\nconst double = a => a * 2\nconst square = a => a * a\n\nmodule.exports = compose(\n  square,\n  id,\n  double,\n)(one)\n```\n\n**After**:\n\n```javascript\nmodule.exports = 4\n```\n\n## Configure with Babel\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"preval\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins preval script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('babel-core').transform('code', {\n  plugins: ['preval'],\n})\n```\n\n## Use with `babel-plugin-macros`\n\nOnce you've\n[configured `babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/user.md)\nyou can import/require the preval macro at `babel-plugin-preval/macro`. For\nexample:\n\n```javascript\nimport preval from 'babel-plugin-preval/macro'\n\nconst one = preval`module.exports = 1 + 2 - 1 - 1`\n```\n\n> You could also use [`preval.macro`][preval.macro] if you'd prefer to type less\n> 😀\n\n## Examples\n\n- [Mastodon](https://github.com/tootsuite/mastodon/pull/4202) saved 40kb\n  (gzipped) using `babel-plugin-preval`\n- [glamorous-website](https://github.com/kentcdodds/glamorous-website/pull/235)\n  uses [`preval.macro`][preval.macro] to determine Algolia options based on\n  `process.env.LOCALE`. It also uses [`preval.macro`][preval.macro] to load an\n  `svg` file as a string, `base64` encode it, and use it as a `background-url`\n  for an input element.\n- [Generate documentation for React components](https://gist.github.com/souporserious/575609dc5a5d52e167dd2236079eccc0)\n- [Serverless with webpack](https://github.com/geovanisouza92/serverless-preval)\n  build serverless functions using webpack and Babel for development and\n  production with preval to replace (possible sensible) content in code.\n- [Read files at build time (video)](https://www.youtube.com/watch?v=NhmrbpVKgdQ&feature=youtu.be)\n\n## Notes\n\nIf you use `babel-plugin-transform-decorators-legacy`, there is a conflict\nbecause both plugins must be placed at the top\n\nWrong:\n\n```json\n{\n  \"plugins\": [\"preval\", \"transform-decorators-legacy\"]\n}\n```\n\nOk:\n\n```json\n{\n  \"plugins\": [\"preval\", [\"transform-decorators-legacy\"]]\n}\n```\n\n## FAQ\n\n### How is this different from prepack?\n\n[`prepack`][prepack] is intended to be run on your final bundle after you've run\nyour webpack/etc magic on it. It does a TON of stuff, but the idea is that your\ncode should work with or without prepack.\n\n`babel-plugin-preval` is intended to let you write code that would _not_ work\notherwise. Doing things like reading something from the file system are not\npossible in the browser (or with prepack), but `preval` enables you to do this.\n\n### How is this different from webpack loaders?\n\nThis plugin was inspired by webpack's [val-loader][val-loader]. The benefit of\nusing this over that loader (or any other loader) is that it integrates with\nyour existing babel pipeline. This is especially useful for the server where\nyou're probably not bundling your code with [`webpack`][webpack], but you may be\nusing babel. (If you're not using either, configuring babel for this would be\neasier than configuring webpack for `val-loader`).\n\nIn addition, you can implement pretty much any webpack loader using\n`babel-plugin-preval`.\n\nIf you want to learn more, check `webpack` documentations about\n[`loaders`][webpack-loaders].\n\n## Inspiration\n\nI needed something like this for the\n[glamorous website](https://github.com/kentcdodds/glamorous-website). I\nlive-streamed developing the whole thing. If you're interested you can find\n[the recording on my youtube channel](https://www.youtube.com/watch?v=3vxov5xUai8&index=19&list=PLV5CVI1eNcJh5CTgArGVwANebCrAh2OUE)\n(note, screen only recording, no audio).\n\nI was inspired by the [val-loader][val-loader] from webpack.\n\n## Related Projects\n\n- [`preval.macro`][preval.macro] - nicer integration with `babel-plugin-macros`\n\n## Other Solutions\n\nI'm not aware of any, if you are please [make a pull request][prs] and add it\nhere!\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars.githubusercontent.com/u/1500684?v=3\" width=\"100px;\"/><br /><sub><b>Kent C. Dodds</b></sub>](https://kentcdodds.com)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=kentcdodds \"Code\") [📖](https://github.com/kentcdodds/babel-plugin-preval/commits?author=kentcdodds \"Documentation\") [🚇](#infra-kentcdodds \"Infrastructure (Hosting, Build-Tools, etc)\") [⚠️](https://github.com/kentcdodds/babel-plugin-preval/commits?author=kentcdodds \"Tests\") | [<img src=\"https://avatars3.githubusercontent.com/u/5610087?v=3\" width=\"100px;\"/><br /><sub><b>Matt Phillips</b></sub>](http://mattphillips.io)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=mattphillips \"Code\") [📖](https://github.com/kentcdodds/babel-plugin-preval/commits?author=mattphillips \"Documentation\") [⚠️](https://github.com/kentcdodds/babel-plugin-preval/commits?author=mattphillips \"Tests\") | [<img src=\"https://avatars1.githubusercontent.com/u/28024000?v=3\" width=\"100px;\"/><br /><sub><b>Philip Oliver</b></sub>](https://twitter.com/philipodev)<br />[🐛](https://github.com/kentcdodds/babel-plugin-preval/issues?q=author%3Aphilipodev \"Bug reports\") | [<img src=\"https://avatars2.githubusercontent.com/u/2109702?v=3\" width=\"100px;\"/><br /><sub><b>Sorin Davidoi</b></sub>](https://toot.cafe/@sorin)<br />[🐛](https://github.com/kentcdodds/babel-plugin-preval/issues?q=author%3Asorin-davidoi \"Bug reports\") [💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=sorin-davidoi \"Code\") [⚠️](https://github.com/kentcdodds/babel-plugin-preval/commits?author=sorin-davidoi \"Tests\") | [<img src=\"https://avatars4.githubusercontent.com/u/1127238?v=4\" width=\"100px;\"/><br /><sub><b>Luke Herrington</b></sub>](https://github.com/infiniteluke)<br />[💡](#example-infiniteluke \"Examples\") | [<img src=\"https://avatars4.githubusercontent.com/u/22868432?v=4\" width=\"100px;\"/><br /><sub><b>Lufty Wiranda</b></sub>](http://instagram.com/luftywiranda13)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=luftywiranda13 \"Code\") | [<img src=\"https://avatars0.githubusercontent.com/u/3877773?v=4\" width=\"100px;\"/><br /><sub><b>Oscar</b></sub>](http://obartra.github.io)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=obartra \"Code\") [⚠️](https://github.com/kentcdodds/babel-plugin-preval/commits?author=obartra \"Tests\") |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| [<img src=\"https://avatars1.githubusercontent.com/u/14310216?v=4\" width=\"100px;\"/><br /><sub><b>pro-nasa</b></sub>](https://github.com/pro-nasa)<br />[📖](https://github.com/kentcdodds/babel-plugin-preval/commits?author=pro-nasa \"Documentation\") | [<img src=\"https://avatars0.githubusercontent.com/u/9248479?v=4\" width=\"100px;\"/><br /><sub><b>Sergey Bekrin</b></sub>](http://bekrin.me)<br /> | [<img src=\"https://avatars0.githubusercontent.com/u/18613301?v=4\" width=\"100px;\"/><br /><sub><b>Mauro Bringolf</b></sub>](https://maurobringolf.ch)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=maurobringolf \"Code\") [⚠️](https://github.com/kentcdodds/babel-plugin-preval/commits?author=maurobringolf \"Tests\") | [<img src=\"https://avatars1.githubusercontent.com/u/10875678?v=4\" width=\"100px;\"/><br /><sub><b>Joe Lim</b></sub>](https://joelim.me)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=xjlim \"Code\") | [<img src=\"https://avatars3.githubusercontent.com/u/13483453?v=4\" width=\"100px;\"/><br /><sub><b>Marcin Zielinski</b></sub>](https://github.com/marzelin)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=marzelin \"Code\") | [<img src=\"https://avatars3.githubusercontent.com/u/1972567?v=4\" width=\"100px;\"/><br /><sub><b>Tommy</b></sub>](http://www.tommyleunen.com)<br />[💻](https://github.com/kentcdodds/babel-plugin-preval/commits?author=tleunen \"Code\") | [<img src=\"https://avatars0.githubusercontent.com/u/831308?v=4\" width=\"100px;\"/><br /><sub><b>Matheus Gonçalves da Silva</b></sub>](https://github.com/PlayMa256)<br />[📖](https://github.com/kentcdodds/babel-plugin-preval/commits?author=PlayMa256 \"Documentation\") |\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/travis/kentcdodds/babel-plugin-preval.svg?style=flat-square\n[build]: https://travis-ci.org/kentcdodds/babel-plugin-preval\n[coverage-badge]: https://img.shields.io/codecov/c/github/kentcdodds/babel-plugin-preval.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/babel-plugin-preval\n[version-badge]: https://img.shields.io/npm/v/babel-plugin-preval.svg?style=flat-square\n[package]: https://www.npmjs.com/package/babel-plugin-preval\n[downloads-badge]: https://img.shields.io/npm/dm/babel-plugin-preval.svg?style=flat-square\n[npmtrends]: http://www.npmtrends.com/babel-plugin-preval\n[license-badge]: https://img.shields.io/npm/l/babel-plugin-preval.svg?style=flat-square\n[license]: https://github.com/kentcdodds/babel-plugin-preval/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[donate-badge]: https://img.shields.io/badge/$-support-green.svg?style=flat-square\n[donate]: http://kcd.im/donate\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/kentcdodds/babel-plugin-preval/blob/master/other/CODE_OF_CONDUCT.md\n[macros-badge]: https://img.shields.io/badge/babel--macro-%F0%9F%8E%A3-f5da55.svg?style=flat-square\n[babel-plugin-macros]: https://github.com/kentcdodds/babel-plugin-macros\n[examples-badge]: https://img.shields.io/badge/%F0%9F%92%A1-examples-8C8E93.svg?style=flat-square\n[examples]: https://github.com/kentcdodds/babel-plugin-preval/blob/master/other/EXAMPLES.md\n[github-watch-badge]: https://img.shields.io/github/watchers/kentcdodds/babel-plugin-preval.svg?style=social\n[github-watch]: https://github.com/kentcdodds/babel-plugin-preval/watchers\n[github-star-badge]: https://img.shields.io/github/stars/kentcdodds/babel-plugin-preval.svg?style=social\n[github-star]: https://github.com/kentcdodds/babel-plugin-preval/stargazers\n[twitter]: https://twitter.com/intent/tweet?text=Check%20out%20babel-plugin-preval!%20https://github.com/kentcdodds/babel-plugin-preval%20%F0%9F%91%8D\n[twitter-badge]: https://img.shields.io/twitter/url/https/github.com/kentcdodds/babel-plugin-preval.svg?style=social\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[prepack]: https://github.com/facebook/prepack\n[preval.macro]: https://github.com/kentcdodds/preval.macro\n[webpack]: https://webpack.js.org/\n[webpack-loaders]: https://webpack.js.org/concepts/loaders/\n[val-loader]: https://github.com/webpack-contrib/val-loader\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2017 Kent C. Dodds\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-preval/-/babel-plugin-preval-3.0.1.tgz#a26f9690114a864a54a5cbdf865496ebf541a9c3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-preval/-/babel-plugin-preval-3.0.1.tgz",
    "hash": "a26f9690114a864a54a5cbdf865496ebf541a9c3",
    "integrity": "sha512-s8hmTlRSmzcL7cHSIi0s6WxmpOAxfIlWqSVQwBIt7V5bNBaac+8JMZ6kJXLOazMJ8gCIcb5AJgQUgPHvbSYUzw==",
    "registry": "npm",
    "packageName": "babel-plugin-preval",
    "cacheIntegrity": "sha512-s8hmTlRSmzcL7cHSIi0s6WxmpOAxfIlWqSVQwBIt7V5bNBaac+8JMZ6kJXLOazMJ8gCIcb5AJgQUgPHvbSYUzw== sha1-om+WkBFKhkpUpcvfhlSW6/VBqcM="
  },
  "registry": "npm",
  "hash": "a26f9690114a864a54a5cbdf865496ebf541a9c3"
}