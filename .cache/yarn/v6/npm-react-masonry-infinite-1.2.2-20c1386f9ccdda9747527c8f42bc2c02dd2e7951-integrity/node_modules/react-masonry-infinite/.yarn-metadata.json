{
  "manifest": {
    "name": "react-masonry-infinite",
    "version": "1.2.2",
    "description": "React component for masonry infinite grid. Based on Bricks.js, React Infinite Scroller and React Masonry Layout.",
    "main": "./lib/index",
    "scripts": {
      "clean": "rimraf lib",
      "build": "babel src -d lib",
      "prepublish": "npm run clean && npm run build",
      "lint": "eslint src",
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/skoob13/react-masonry-infinite.git"
    },
    "keywords": [
      "react",
      "masonry",
      "react-component",
      "infinite",
      "scroll"
    ],
    "author": {
      "name": "Georgiy Tarasov",
      "email": "g@anot.co"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/skoob13/react-masonry-infinite/issues"
    },
    "homepage": "https://skoob13.github.io/react-masonry-infinite",
    "dependencies": {
      "bricks.js": "^1.7.0",
      "prop-types": "^15.5.10",
      "react-infinite-scroller": "^1.0.12"
    },
    "devDependencies": {
      "babel-cli": "^6.14.0",
      "babel-core": "^6.7.6",
      "babel-eslint": "^6.0.2",
      "babel-plugin-transform-decorators-legacy": "^1.3.4",
      "babel-preset-es2015": "^6.6.0",
      "babel-preset-react": "^6.5.0",
      "babel-preset-stage-0": "^6.5.0",
      "eslint": "^2.7.0",
      "eslint-plugin-react": "^4.3.0",
      "react": "^15.5.4",
      "react-dom": "^15.5.4",
      "rimraf": "^2.5.2"
    },
    "peerDependencies": {
      "react": ">= 0.14.0"
    },
    "_registry": "npm",
    "_loc": "/home/mastodon/.cache/yarn/v6/npm-react-masonry-infinite-1.2.2-20c1386f9ccdda9747527c8f42bc2c02dd2e7951-integrity/node_modules/react-masonry-infinite/package.json",
    "readmeFilename": "README.md",
    "readme": "# React Masonry Infinite\n\n[![npm](https://img.shields.io/npm/dy/localeval.svg)](https://npmjs.com/react-masonry-infinite)\n\nVery simple React.js component for masonry grid. Based on [Bricks.js](https://github.com/callmecavs/bricks.js), [React Infinite Scroller](https://github.com/CassetteRocks/react-infinite-scroller) and [React Masonry Layout](https://github.com/scarletsky/react-masonry-layout).\n\nComponent is mostly suitable for static data, but can be used with dynamic with instance methods.\n\n### Demo\n[Demo page](https://skoob13.github.io/react-masonry-infinite)\n\n### Features\n- Masonry layout\n- Perfomance of Bricks.js ([Bricks.js homepage](http://callmecavs.com/bricks.js/))\n- Infinite scroll from a box\n\n### Instalation\n\nUsing `NPM`\n\n```sh\n  npm install --save react-masonry-infinite \n```\n\nUsing `yarn`\n\n```sh\n  yarn add react-masonry-infinite \n```\n\n### Basic example\n```js\nimport MasonryInfiniteScroller from 'react-masonry-infinite';\n\n...\n<MasonryInfiniteScroller\n    hasMore={this.state.hasMore}\n    loadMore={() => this.setState({ elements: this.state.elements.push(\"Element\") })}\n>\n    {\n        this.state.elements.map(id =>\n            <div key={id} />\n        )\n    }\n</MasonryInfiniteScroller>\n...\n```\n\n### Props\n\n|Props|Type|Default|Description|\n|:-:|:-:|:--|:--|\n|        className          |       String      |        `''`      | CSS className for root element           |\n|      pack        |       Boolean      |    `false`   | Flag to force pack on every update |\n|      packed        |       String      |    `data-packed`   | An attribute added to the grid items after they're positioned within the grid. If the attribute is not prefixed with `data-`, it will be added. See [Bricks.js](https://github.com/callmecavs/bricks.js) |\n|       sizes         |       Array       |    `[{ columns: 1, gutter: 20 }, { mq: '768px', columns: 2, gutter: 20 }, { mq: '1024px', columns: 3, gutter: 20 }]` | An array of objects describing the grid's properties at different breakpoints. When defining your sizes, note the rules of [Bricks.js](https://github.com/callmecavs/bricks.js) |\n|       position        |       Boolean      |         `true`       | A Boolean indicating that the grid items should be positioned using the `top` and `left` CSS properties. |\n|       style        |       Object      |         `{}`       | The inline style |\n\nAnd other [React Infinite Scroller](https://github.com/CassetteRocks/react-infinite-scroller) props.\n\n### Methods\n\n|Method|Description|\n|:-:|:--|\n|forcePack|Packs Bricks.js instance (usefull when data is dynamic)|\n|forceUpdate|Updates Bricks.js instance|\n|createNewInstance|Recreates Bricks.js instance. E.g. when you need to dynamically handle amount of columns.|\n\n### License\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2016 Georgiy Tarasov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-masonry-infinite/-/react-masonry-infinite-1.2.2.tgz#20c1386f9ccdda9747527c8f42bc2c02dd2e7951",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-masonry-infinite/-/react-masonry-infinite-1.2.2.tgz",
    "hash": "20c1386f9ccdda9747527c8f42bc2c02dd2e7951",
    "integrity": "sha1-IME4b5zN2pdHUnyPQrwsAt0ueVE=",
    "registry": "npm",
    "packageName": "react-masonry-infinite",
    "cacheIntegrity": "sha512-mUr0NRzeec9fnwkS513pOsBmMOOZe2YxVuE9HbKjgO0RKp6cFgtUBCEn8wZiiOrmdTiGe8Kx9T8QufJZmhNBxw== sha1-IME4b5zN2pdHUnyPQrwsAt0ueVE="
  },
  "registry": "npm",
  "hash": "20c1386f9ccdda9747527c8f42bc2c02dd2e7951"
}